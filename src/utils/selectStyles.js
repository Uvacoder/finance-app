export const selectStyles = {
  control: (_, { isFocused, isSelected }) => ({
    zIndex: '1000',
    boxSizing: 'border-box',
    width: '168px',
    height: '40px',
    backgroundColor: '#ffffff',
    color: '#52555F',
    fontSize: '12px',
    boxShadow: 'none',
    fontWeight: '400',
    fontFamily: "Roboto,'Open Sans','Helvetica Neue', sans-serif",
    lineHeight: '1.15',
    letterSpacing: '0.02em',
    display: 'flex',
    alignItems: 'center',
    paddingLeft: '20px',
    borderRadius: '0 0 0 16px',
    border: isFocused ? '1px solid #FF751D' : 'none',
    '@media screen and (min-width: 768px)': {
      borderRadius: '0',
    },
  }),
  input: styles => ({
    ...styles,
    color: '#C7CCDC',
  }),
  placeholder: styles => ({
    ...styles,
    color: '#C7CCDC',
  }),
  menu: () => ({
    boxSizing: 'border-box',
    position: 'absolute',
    width: '168px',
    backgroundColor: '#ffffff',
    zIndex: '200',
    border: '2px solid #F5F6FB',
    boxShadow: '0px 3px 4px rgba(170, 178, 197, 0.4)',
  }),
  valueContainer: styles => ({
    ...styles,
    padding: '0',
  }),
  singleValue: styles => ({
    ...styles,
    color: '#52555F',
  }),
  indicatorSeparator: () => ({
    // ...styles,
    display: 'none',
  }),
  dropdownIndicator: (styles, { isFocused, isSelected }) => ({
    ...styles,
    color: isFocused ? '#52555F' : '#C7CCDC',
    transform: isFocused ? 'rotate(180deg)' : null,
  }),
  option: (_, { isDisabled, isFocused }) => {
    return {
      height: '32px',
      paddingLeft: '20px',
      display: 'flex',
      alignItems: 'center',
      fontSize: '12px',
      boxShadow: 'none',
      fontWeight: '400',
      fontFamily: "Roboto,'Open Sans','Helvetica Neue', sans-serif",
      lineHeight: '1.15',
      letterSpacing: '0.02em',
      color: isFocused ? '#52555F' : '#C7CCDC',
      cursor: isDisabled ? 'not-allowed' : 'default',
      backgroundColor: isFocused ? '#F5F6FB' : '#ffffff',
    };
  },
};
