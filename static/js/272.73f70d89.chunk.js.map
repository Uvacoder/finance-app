{"version":3,"file":"static/js/272.73f70d89.chunk.js","mappings":"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","sources":["components/Balance/Balance.styled.js","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/Balance/BalanceForm.jsx","components/Expenses/styleExpenses.js","components/Chart/Chart.jsx","components/Income/Income.jsx","components/Expenses/Expenses.jsx","components/BalanceReport/Balance.Report.styled.js","components/BalanceReport/BalanceReportForm.jsx","components/BalanceReport/BalanceReport.jsx","components/TotalStatistics/TotalStatisticsStyle.js","components/TotalStatistics/TotalStatistics.jsx","components/Container/container.js","pages/Stats.jsx","redux/transactions/transactionsSelectors.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const BalanceContainer = styled.div`\n  height: auto;\n  flex-direction: column-reverse;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 40px;\n  margin-bottom: 40px;\n  background-color: transparent;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    height: 44px;\n    /* margin: 0 auto; */\n    gap: 0;\n    margin-bottom: 60px;\n    position: relative;\n\n    align-items: center;\n  }\n\n  @media screen and (min-width: 1280px) {\n    justify-content: flex-end;\n    margin-bottom: 8px;\n  }\n`;\n\nexport const PortalContainer = styled.div`\n  height: 0;\n  width: 125px;\n  padding-left: 68px;\n  padding-right: 141px;\n`;\n\nexport const AbsoluteContainer = styled(BalanceContainer)`\n  box-sizing: border-box;\n  top: 144px;\n  height: 0;\n  width: 100%;\n\n  position: absolute;\n\n  margin: 0 auto;\n  padding: 0 91px;\n\n  @media screen and (max-width: 768px) {\n    padding: 0 32px;\n  }\n\n  @media screen and (max-width: 480px) {\n    top: 232px;\n    left: -22px;\n\n    padding: 0 20px;\n  }\n`;\n\nexport const BalanceForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: flex-start;\n    gap: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    align-self: center;\n    justify-content: center;\n    flex-grow: 3;\n  }\n`;\n\nexport const BalanceFormNotification = styled(BalanceForm)``;\n\nexport const Text = styled.label`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.67;\n  letter-spacing: 0.02em;\n\n  color: rgba(82, 85, 95, 0.7);\n\n  margin-right: 20px;\n`;\n\nexport const CurrentBalance = styled.p`\n  box-sizing: border-box;\n\n  position: relative;\n\n  height: 44px;\n  width: 125px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.67px;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  text-align: center;\n\n  color: black;\n  background-color: ${p => p.theme.colors.BgGray};\n\n  border: 2px solid #ffffff;\n  border-radius: 16px;\n  margin-right: 16px;\n\n  @media screen and (max-width: 480px) {\n    width: 140px;\n\n    padding-right: 16px;\n    border-radius: 22px 0px 0px 22px;\n    margin: 0;\n    margin-top: 8px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 74px;\n\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.67px;\n  letter-spacing: 0.02em;\n  text-align: right;\n\n  color: black;\n\n  background-color: transparent;\n\n  border: none;\n\n  outline: none;\n`;\n\nexport const CurrentBalanceContainer = styled.div`\n  position: relative;\n`;\n\nexport const StyledBtn = styled.button`\n  box-sizing: border-box;\n\n  height: 44px;\n  width: 125px;\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.67;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n\n  color: rgba(82, 85, 95, 0.7);\n  background-color: ${p => p.theme.colors.BgGray};\n\n  transition: background-color 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    border 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  border: 2px solid #ffffff;\n  border-radius: 16px;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: ${p => p.theme.colors.PrimaryOrange};\n\n    border: none;\n  }\n\n  @media screen and (max-width: 480px) {\n    width: 140px;\n\n    border-radius: 0px 22px 22px 0px;\n    margin: 0;\n    margin-top: 8px;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  line-height: 1.67;\n  letter-spacing: 0.04em;\n  text-decoration: none;\n  color: rgba(82, 85, 95, 0.7);\n  transition: color 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.PrimaryOrange};\n  }\n\n  @media screen and (min-width: 1280px) {\n    /* flex-grow: 1; */\n    justify-content: flex-end;\n  }\n`;\n\nexport const ReportsSvg = styled.svg`\n  height: 14px;\n  width: 14px;\n\n  margin-left: 20px;\n`;\n\nexport const BaseContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const NotificationContainer = styled.div`\n  position: absolute;\n  top: -5px;\n  left: 23%;\n`;\n\nexport const Triangle = styled.div`\n  position: absolute;\n  top: -11px;\n  left: 46.36px;\n\n  height: 12px;\n  width: 26px;\n\n  background: linear-gradient(117.84deg, #1d346a 2.84%, #031634 67.28%);\n\n  clip-path: polygon(100% 100%, 0 100%, 50% 0);\n`;\n\nexport const StyledWindow = styled.div`\n  box-sizing: border-box;\n\n  position: relative;\n\n  height: 152px;\n  width: 288px;\n\n  background: linear-gradient(117.84deg, #1d346a 2.84%, #031634 67.28%);\n\n  padding: 29px 29.59px;\n  border-radius: 30px;\n  margin-top: 13px;\n\n  opacity: 0;\n\n  transition: opacity 600ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n\n  @media screen and (max-width: 480px) {\n    display: block;\n\n    width: 280px;\n  }\n`;\n\nexport const NotificationText = styled.p`\n  font-size: 14px;\n  line-height: 1.43;\n  text-align: left;\n\n  color: white;\n\n  margin: 0;\n\n  margin-bottom: 20px;\n`;\n\nexport const NotificationSubText = styled.p`\n  font-size: 12px;\n  line-height: 1.33;\n\n  color: white;\n\n  margin: 0;\n`;\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport {\n  NotificationContainer,\n  StyledWindow,\n  Triangle,\n  NotificationText,\n  NotificationSubText,\n} from './Notification.styled';\n\nexport function Notification({ money = false, }) {\n  const [show, setShow] = useState(false);\n  const [opacity, setOpacity] = useState(0);\n  useEffect(() => {\n    if (!money) {\n      setTimeout(() => {\n        setShow(true);\n        setTimeout(() => setOpacity(1), 0);\n        setTimeout(() => setOpacity(0), 9400);\n        setTimeout(() => setShow(false), 10000);\n      }, 1000);\n    }\n  }, [money]);\n\n  return (\n    <>\n      {show && (\n        <NotificationContainer onClick={() => setShow(false)}>\n          <StyledWindow style={{ opacity }}>\n            <Triangle />\n            <NotificationText>\n              Hello! To get started, enter the current balance of your account!\n            </NotificationText>\n            <NotificationSubText>You can't spend money until you have it :)</NotificationSubText>\n          </StyledWindow>\n        </NotificationContainer>\n      )}\n    </>\n  );\n}\n","import { useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectBalance } from 'redux/transactions/transactionsSelectors';\nimport {\n  Text,\n  CurrentBalance,\n  StyledBtn,\n  CurrentBalanceContainer,\n  BalanceForm,\n  Input,\n  BaseContainer,\n  PortalContainer,\n  AbsoluteContainer,\n} from './Balance.styled';\nimport { Notification } from 'components/Notification/Notification';\nimport { Popup } from 'components/Popup/Popup';\nimport { fetchUserBalance } from 'redux/transactions/transactionsOps';\nimport { notifySettings } from '../../utils/notifySettings';\nimport Notiflix from 'notiflix';\n\nexport const formating = data => {\n  const fixedData = data.toFixed(2);\n  if (data < 10) return '0' + fixedData;\n\n  const dividedData = fixedData.split('.');\n\n  const spacedData = Number(dividedData[0]).toLocaleString().split(',').join(' ');\n  return spacedData + '.' + dividedData[1];\n};\n\nexport function BalanceFrom() {\n  const balance = useSelector(selectBalance);\n  const token = useSelector(state => state.auth.accessToken);\n\n  const [popup, setPopup] = useState({\n    isShow: false,\n    title: '',\n    action: null,\n  });\n\n  const dispatch = useDispatch();\n\n  const [value, setValue] = useState(balance ?? 0);\n\n  const onBlur = evt => {\n    const data = evt.target.value.split(' ').join('');\n    const number = Number(data);\n\n    if(number<1){\n      evt.target.value=formating(value);\n      Notiflix.Notify.warning(\n        `The minimum value is 01.00!`,\n        notifySettings\n      );\n      return;\n    }\n    if (number <= 1000000) {\n      setValue(number);\n      evt.target.value = formating(number);\n    } else {\n      evt.target.value = formating(value);\n    }\n  };\n\n  const onClick = () => {\n    setPopup({\n      isShow: true,\n      title: 'Are you sure?',\n      action: () => dispatch(fetchUserBalance({ value, token })),\n    });\n    document.querySelector('#modal').classList.add('js-action');\n  };\n\n  return (\n    <>\n      <BalanceForm>\n        <Text htmlFor=\"balance\">Balance:</Text>\n        <BaseContainer>\n          <CurrentBalanceContainer>\n            <CurrentBalance>\n              <Input\n                type=\"text\"\n                id=\"balance\"\n                name=\"balance\"\n                defaultValue={formating(value)}\n                onBlur={onBlur}\n                pattern=\"[0-9]\"\n              />\n              uah\n            </CurrentBalance>\n            {createPortal(\n              <AbsoluteContainer>\n                <BalanceForm>\n                  <PortalContainer>\n                    <Notification money={value} />\n                  </PortalContainer>\n                </BalanceForm>\n              </AbsoluteContainer>,\n              document.querySelector('#balance')\n            )}\n          </CurrentBalanceContainer>\n          <StyledBtn type=\"button\" onClick={onClick}>\n            Confirm\n          </StyledBtn>\n        </BaseContainer>\n      </BalanceForm>\n      {popup.isShow && <Popup popup={popup} setPopup={setPopup} />}\n    </>\n  );\n}\n","import styled from '@emotion/styled';\nimport { theme } from 'components/Theme';\n\nconst styledComponents = {\n  BoxForBalance: styled.div`\n    display: block;\n    width: 705px;\n    padding: 0;\n    margin: 0 auto 30px auto;\n    @media screen and (max-width: 768px) {\n      width: 100%;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: 1035px;\n    }\n  `,\n  BoxStats: styled.div`\n    display: block;\n    text-align: center;\n    width: 705px;\n    padding: 20px;\n    border-radius: 30px;\n    margin: 0 auto 40px auto;\n    background-color: ${theme.colors.PrimaryWhite};\n    @media screen and (max-width: 768px) {\n      width: 100%;\n      padding: 5px 5px;\n      margin: 0;\n      background-color: transparent;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: 1035px;\n    }\n  `,\n\n  BoxForSchedule: styled.div`\n    height: 350px;\n    display: block;\n    text-align: center;\n    width: 705px;\n    padding: 20px;\n    border-radius: 30px;\n    margin: 0 auto;\n    background-color: ${theme.colors.PrimaryWhite};\n    @media screen and (max-width: 768px) {\n      width: 100%;\n      padding: 5px 5px;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: 1035px;\n    }\n  `,\n\n  ListOfBalanceChanges: styled.ul`\n    display: flex;\n    padding: 0;\n    width: 625px;\n    margin: 0 auto;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: baseline;\n    row-gap: 40px;\n    column-gap: 30px;\n    list-style: none;\n    color: ${theme.colors.TextGray};\n    @media screen and (max-width: 768px) {\n      column-gap: 0;\n      row-gap: 0;\n      width: 100%;\n    }\n  `,\n  ItemOfBalanceChanges: styled.li`\n    max-width: 100px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n\n    font-size: 12px;\n    line-height: 14px;\n    letter-spacing: 0.02em;\n    text-transform: uppercase;\n    @media screen and (max-width: 768px) {\n      max-width: 110px;\n      padding: 20px 10px;\n      border-bottom: 1px solid ${theme.colors.TextGray};\n    }\n  `,\n  TitleOfBalanceChanges: styled.h3`\n    display: inline-block;\n    font-size: 14px;\n    line-height: 16px;\n    letter-spacing: 0.02em;\n    text-transform: uppercase;\n    margin: 0 30px 20px 30px;\n    color: ${theme.colors.PrimaryBlack};\n  `,\n  SvgBoxStyle: styled.svg`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 56px;\n    height: 56px;\n    margin: -5px;\n    fill: ${theme.colors.SVGColor};\n    transition: 350ms ease-in-out;\n    &:hover,\n    &:focus,\n    &:active {\n      fill: ${theme.colors.PrimaryOrange};\n      transform: scale(1.2);\n    }\n  `,\n\n  BoxForSvg: styled.div`\n    background-color: ${theme.colors.PrimaryGray};\n    border-radius: 30px;\n    width: 46px;\n    height: 46px;\n    margin: -5px -5px 0 0;\n    &:hover {\n      background-color: ${theme.colors.PaleOrange};\n      transform: scale(1.2);\n    }\n  `,\n\n  BtnToggleStats: styled.button`\n    padding: 5px;\n    border: none;\n    background-color: transparent;\n  `,\n};\n\nexport default styledComponents;\n","import { useMediaQuery } from '@react-hook/media-query';\n\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Cell,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n} from 'recharts';\n\nconst customLabelHorizontal = ({ x, y, width, value }) => {\n  return (\n    <text x={x + width / 2} y={y} textAnchor=\"middle\" dy={-6}>\n      {`${value} UAH`}\n    </text>\n  );\n};\n\nconst customLabelVertical = ({ x, y, value }) => {\n  return (\n    <text x={x} y={y} textAnchor=\"start\">\n      {`${value} UAH`}\n    </text>\n  );\n};\nexport const Chart = ({ data }) => {\n  const matches = useMediaQuery('only screen and (min-width: 420px)');\n\n  return (\n    <>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        {matches ? (\n          <BarChart\n            layout=\"horizontal\"\n            data={data}\n            margin={{ top: 30, right: 15, bottom: 15, left: 15 }}\n            barCategoryGap={1}\n          >\n            <XAxis dataKey=\"name\" type=\"category\" />\n            <CartesianGrid vertical={false} />\n            <Bar\n              dataKey=\"cost\"\n              fill=\"#FF751D\"\n              label={customLabelHorizontal}\n              barSize={50}\n              radius={[15, 15, 0, 0]}\n            >\n              {data.map((_, index) => {\n                switch (index % 3) {\n                  case 0:\n                    return <Cell key={`cell-${index}`} fill=\"#FF751D\" />;\n                  case 1:\n                  case 2:\n                    return <Cell key={`cell-${index}`} fill=\"#FED9BF\" />;\n                  default:\n                    return <Cell key={`cell-${index}`} fill=\"#FF751D\" />;\n                }\n              })}\n            </Bar>\n          </BarChart>\n        ) : (\n          <BarChart\n            layout=\"vertical\"\n            data={data}\n            margin={{ top: 15, right: 30, bottom: 15, left: 15 }}\n            barCategoryGap={1}\n          >\n            <XAxis axisLine={false} type=\"number\" hide />\n            <YAxis dataKey=\"name\" type=\"category\" />\n            <CartesianGrid vertical={false} />\n            <Bar\n              dataKey=\"cost\"\n              fill=\"#FF751D\"\n              label={customLabelVertical}\n              barSize={20}\n              radius={[0, 15, 15, 0]}\n            >\n              {data.map((_, index) => {\n                switch (index % 3) {\n                  case 0:\n                    return <Cell key={`cell-${index}`} fill=\"#FF751D\" />;\n                  case 1:\n                  case 2:\n                    return <Cell key={`cell-${index}`} fill=\"#FED9BF\" />;\n                  default:\n                    return <Cell key={`cell-${index}`} fill=\"#FF751D\" />;\n                }\n              })}\n            </Bar>\n          </BarChart>\n        )}\n      </ResponsiveContainer>\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport svg from '../../images/icons_sprite.svg';\nimport styledComponents from 'components/Expenses/styleExpenses';\nimport { formating } from 'components/Balance/BalanceForm';\nimport { Chart } from 'components/Chart/Chart';\nimport { useState } from 'react';\n\nconst {\n  ListOfBalanceChanges,\n  ItemOfBalanceChanges,\n  TitleOfBalanceChanges,\n  SvgBoxStyle,\n  BtnToggleStats,\n  BoxForSvg,\n  BoxStats,\n  BoxForSchedule,\n} = styledComponents;\n\nconst Income = ({ onClick }) => {\n  const statistics = useSelector(state => state.statistics.statistics);\n  const [filter, setFilter] = useState();\n\n  if (!statistics) {\n    return <TitleOfBalanceChanges>\"No data to display!\"</TitleOfBalanceChanges>;\n  }\n\n  const {\n    incomes: {\n      incomesData: {\n        // eslint-disable-next-line no-useless-computed-key\n        ['З/П']: salary,\n        // eslint-disable-next-line no-useless-computed-key\n        ['Доп. доход']: income,\n      },\n      incomeTotal,\n    },\n  } = statistics.data;\n\n  const onItemClick = event => {\n    setFilter(event.currentTarget.id);\n  };\n  const filtredData = () => {\n    const data = statistics.data.incomes.incomesData;\n\n    if (!data) return;\n    if (!filter) return;\n\n    const [, incomes] = Object.entries(data).filter(\n      el => el[0] === filter\n    )[0] || [null, false];\n\n    const res = Object.entries(incomes)\n      .filter(el => {\n        return el[0] !== 'total';\n      })\n      .map(el => {\n        return { name: el[0], cost: el[1] };\n      });\n\n    if (res.length === 0) {\n      return null;\n    }\n    return res;\n  };\n\n  return (\n    <>\n      <BoxStats>\n        <div>\n          <BtnToggleStats type=\"button\" onClick={onClick}>\n            <svg width=\"10\" height=\"10\">\n              <use href={`${svg}#arrow_left`} />\n            </svg>\n          </BtnToggleStats>\n          <TitleOfBalanceChanges>Income</TitleOfBalanceChanges>\n          <BtnToggleStats type=\"button\" onClick={onClick}>\n            <svg width=\"10\" height=\"10\">\n              <use href={`${svg}#arrow_right`} />\n            </svg>\n          </BtnToggleStats>\n        </div>\n        {incomeTotal ? (\n          <ListOfBalanceChanges>\n            {salary && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"З/П\">\n                <p>{formating(salary.total)}</p>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#salary`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Salary</p>\n              </ItemOfBalanceChanges>\n            )}\n            {income && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Доп. доход\">\n                <p>{formating(income.total)}</p>\n                <BoxForSvg>\n                  <SvgBoxStyle>\n                    <use href={`${svg}#income`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Add. income</p>\n              </ItemOfBalanceChanges>\n            )}\n          </ListOfBalanceChanges>\n        ) : (\n          <TitleOfBalanceChanges>\"No data to display!\"</TitleOfBalanceChanges>\n        )}\n      </BoxStats>\n      {filtredData() && (\n        <BoxForSchedule>\n          <Chart data={filtredData()} />\n        </BoxForSchedule>\n      )}\n    </>\n  );\n};\n\nexport default Income;\n","import { useSelector } from 'react-redux';\nimport svg from '../../images/icons_sprite.svg';\nimport styledComponents from './styleExpenses';\nimport { formating } from 'components/Balance/BalanceForm';\nimport { Chart } from 'components/Chart/Chart';\nimport { useState } from 'react';\n\nconst {\n  ListOfBalanceChanges,\n  ItemOfBalanceChanges,\n  TitleOfBalanceChanges,\n  SvgBoxStyle,\n  BtnToggleStats,\n  BoxForSvg,\n  BoxStats,\n  BoxForSchedule,\n} = styledComponents;\n\nconst Expenses = ({ onClick }) => {\n  const [filter, setFilter] = useState('');\n  const statistics = useSelector(state => state.statistics.statistics);\n\n  if (!statistics) {\n    return (\n      <BoxStats>\n        <TitleOfBalanceChanges>\"No data to display!\"</TitleOfBalanceChanges>\n      </BoxStats>\n    );\n  }\n\n  const onItemClick = event => {\n    setFilter(event.currentTarget.id);\n  };\n  const filtredData = () => {\n    if (!filter) return;\n\n    const data = statistics.data.expenses.expensesData;\n\n    const [, expenses] = Object.entries(data).filter(el => {\n      return el[0] === filter;\n    })[0] || [null, false];\n\n    const res = Object.entries(expenses)\n      .filter(el => {\n        return el[0] !== 'total';\n      })\n      .map(el => {\n        return { name: el[0], cost: el[1] };\n      });\n\n    if (res.length === 0) {\n      return null;\n    }\n    return res;\n  };\n\n  const {\n    expenses: {\n      expensesData: {\n        Продукты: products,\n        Алкоголь: alcohol,\n        Развлечения: entertainment,\n        Здоровье: health,\n        Транспорт: transport,\n       // eslint-disable-next-line no-useless-computed-key\n        ['Всё для дома']: housing,\n        Техника: technique,\n        // eslint-disable-next-line no-useless-computed-key\n        ['Коммуналка и связь']: communal,\n       // eslint-disable-next-line no-useless-computed-key\n        ['Спорт и хобби']: hobbies,\n        Образование: education,\n        Прочее: other,\n      },\n      expenseTotal,\n    },\n  } = statistics.data;\n\n  return (\n    <>\n      <BoxStats>\n        <div>\n          <BtnToggleStats type=\"button\">\n            <svg width=\"10\" height=\"10\" onClick={onClick}>\n              <use href={`${svg}#arrow_left`} />\n            </svg>\n          </BtnToggleStats>\n          <TitleOfBalanceChanges>Expenses</TitleOfBalanceChanges>\n          <BtnToggleStats type=\"button\" onClick={onClick}>\n            <svg width=\"10\" height=\"10\">\n              <use href={`${svg}#arrow_right`} />\n            </svg>\n          </BtnToggleStats>\n        </div>\n\n        {expenseTotal ? (\n          <ListOfBalanceChanges>\n            {products && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Продукты\">\n                <p>{formating(products.total)}</p>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#products`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n\n                <p>Products</p>\n              </ItemOfBalanceChanges>\n            )}\n            {alcohol && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Алкоголь\">\n                <p>{formating(alcohol.total)}</p>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#alcohol`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Alcohol</p>\n              </ItemOfBalanceChanges>\n            )}\n            {entertainment && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Развлечения\">\n                <p>{formating(entertainment.total)}</p>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#entertainment`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Entertainment</p>\n              </ItemOfBalanceChanges>\n            )}\n            {health && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Здоровье\">\n                <p>{formating(health.total)}</p>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#health`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Health</p>\n              </ItemOfBalanceChanges>\n            )}\n            {transport && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Транспорт\">\n                <p>{formating(transport.total)}</p>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#transport`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Transport</p>\n              </ItemOfBalanceChanges>\n            )}\n            {housing && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Всё для дома\">\n                <p>{formating(housing.total)}</p>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#housing`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Housing</p>\n              </ItemOfBalanceChanges>\n            )}\n            {technique && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Техника\">\n                <p>{formating(technique.total)}</p>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#technique`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Technique</p>\n              </ItemOfBalanceChanges>\n            )}\n            {communal && (\n              <ItemOfBalanceChanges\n                onClick={onItemClick}\n                id=\"Коммуналка и связь\"\n              >\n                <p>{formating(communal.total)}</p>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#communal`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Communal, communication</p>\n              </ItemOfBalanceChanges>\n            )}\n            {hobbies && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Спорт и хобби\">\n                <p>{formating(hobbies.total)}</p>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#hobbies`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Sports, hobbies</p>\n              </ItemOfBalanceChanges>\n            )}\n            {education && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Образование\">\n                <p>{formating(education.total)}</p>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#education`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Education</p>\n              </ItemOfBalanceChanges>\n            )}\n            {other && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Прочее\">\n                <p>{formating(other.total)}</p>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#other`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Other</p>\n              </ItemOfBalanceChanges>\n            )}\n          </ListOfBalanceChanges>\n        ) : (\n          <TitleOfBalanceChanges>\"No data to display!\"</TitleOfBalanceChanges>\n        )}\n      </BoxStats>\n      {filtredData() && (\n        <BoxForSchedule>\n          <Chart data={filtredData()} />{' '}\n        </BoxForSchedule>\n      )}\n    </>\n  );\n};\n\nexport default Expenses;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const BalanceContainer = styled.div`\n  box-sizing: border-box;\n  height: auto;\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  background-color: transparent;\n  flex-direction: column-reverse;\n\n  @media screen and (min-width: 768px) {\n    justify-content: space-between;\n    height: 44px;\n    flex-direction: row;\n  }\n`;\n\nexport const BalanceForm = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: center;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const Text = styled.label`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.67;\n  letter-spacing: 0.02em;\n  color: rgba(82, 85, 95, 0.7);\n  margin-right: 20px;\n`;\n\nexport const CurrentBalance = styled.p`\n  box-sizing: border-box;\n  margin: 0;\n  position: relative;\n  height: 44px;\n  width: 125px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.67px;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  /* text-align: center; */\n\n  color: black;\n  background-color: ${p => p.theme.colors.BgGray};\n\n  border: 2px solid #ffffff;\n  border-radius: 16px;\n  /* margin-right: 16px; */\n\n  @media screen and (max-width: 768px) {\n    margin: 0;\n  }\n\n  @media screen and (max-width: 480px) {\n    width: 183px;\n\n    justify-content: center;\n    padding: 0;\n    border-radius: 22px;\n    margin: 0;\n    margin-top: 8px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 74px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.67px;\n  letter-spacing: 0.02em;\n  text-align: center;\n  color: black;\n  background-color: transparent;\n  border: none;\n  outline: none;\n\n  /* @media screen and (max-width: 480px) {\n    width: 80px;\n  } */\n`;\n\nexport const CurrentBalanceContainer = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const StyledBtn = styled.button`\n  box-sizing: border-box;\n\n  height: 44px;\n  width: 125px;\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.67;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n\n  color: rgba(82, 85, 95, 0.7);\n  background-color: ${p => p.theme.colors.BgGray};\n\n  transition: background-color 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    border 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  border: 2px solid #ffffff;\n  border-radius: 16px;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: ${p => p.theme.colors.PrimaryOrange};\n\n    border: none;\n  }\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n\n  font-size: 12px;\n  line-height: 1.67;\n  letter-spacing: 0.04em;\n\n  text-decoration: none;\n\n  color: rgba(82, 85, 95, 0.7);\n\n  transition: color 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.PrimaryOrange};\n  }\n\n  @media screen and (max-width: 480px) {\n    align-self: flex-start;\n    margin-bottom: 22px;\n  }\n`;\n\nexport const PeriodContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (max-width: 480px) {\n    flex-direction: column;\n  }\n`;\n\nexport const MainPageSvg = styled.svg`\n  height: 18px;\n  width: 18px;\n\n  margin-right: 19px;\n\n  @media screen and (max-width: 480px) {\n    margin-right: 0;\n    margin-left: 3px;\n  }\n`;\n\nexport const Period = styled.p`\n  font-size: 12px;\n  line-height: 1.67;\n  text-align: center;\n  letter-spacing: 0.04em;\n\n  color: rgba(82, 85, 95, 0.7);\n\n  margin: 0;\n`;\n\nexport const PeriodBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: transparent;\n\n  border: none;\n\n  cursor: pointer;\n`;\n\nexport const PeriodArrow = styled.svg`\n  height: 14px;\n  width: 12px;\n`;\n\nexport const BaseContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const MounthContainer = styled(BaseContainer)`\n  width: fit-content;\n`;\n\nexport const PeriodData = styled.p`\n  display: inline-flex;\n  justify-content: center;\n  text-align: center;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.14px;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #000000;\n  user-select: none;\n`;\n\nexport const MainPageText = styled.p`\n  margin: 0;\n\n  @media screen and (max-width: 480px) {\n    display: none;\n  }\n`;\nexport const MounthBox = styled.div`\n  min-width: 150px;\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Text,\n  CurrentBalance,\n  StyledBtn,\n  CurrentBalanceContainer,\n  BalanceForm,\n  Input,\n  BaseContainer,\n} from './Balance.Report.styled';\nimport { Popup } from 'components/Popup/Popup';\nimport { fetchUserBalance } from 'redux/transactions/transactionsOps';\nimport { selectBalance } from 'redux/transactions/transactionsSelectors';\nimport Notiflix from 'notiflix';\nimport { notifySettings } from 'utils/notifySettings';\n\n\n\nexport function BalanceReportFrom() {\n  const balance = useSelector(selectBalance);\n  const token = useSelector(state => state.auth.accessToken);\n\n  const [popup, setPopup] = useState({\n    isShow: false,\n    title: '',\n    action: null,\n  });\n\n  const dispatch = useDispatch();\n\n  const [value, setValue] = useState(balance ?? 0);\n\n  const formating = data => {\n    const fixedData = data.toFixed(2);\n    if (data < 10) return '0' + fixedData;\n\n    const dividedData = fixedData.split('.');\n\n    const spacedData = Number(dividedData[0]).toLocaleString().split(',').join(' ');\n\n    return spacedData + '.' + dividedData[1];\n  };\n\n  const onBlur = evt => {\n    const data = evt.target.value.split(' ').join('');\n    const number = Number(data);\n\n    if(number<1){\n      evt.target.value=formating(value);\n      Notiflix.Notify.warning(\n        `The minimum value is 01.00!`,\n        notifySettings\n      );\n      return;\n    }\n    if (number <= 1000000) {\n      setValue(number);\n      evt.target.value = formating(number);\n    } else {\n      evt.target.value = formating(value);\n    }\n  };\n\n  const onClick = () => {\n    setPopup({\n      isShow: true,\n      title: 'Are you sure?',\n      action: () => dispatch(fetchUserBalance({value, token})),  \n    });\n    document.querySelector('#modal').classList.add('js-action')\n  };\n\n  return (\n    <>\n    <BalanceForm>\n      <Text htmlFor=\"balance\">Balance:</Text>\n      <BaseContainer>\n        <CurrentBalanceContainer>\n          <CurrentBalance>\n            <Input\n              type=\"text\"\n              id=\"balance\"\n              name=\"balance\"\n              defaultValue={formating(value)}\n              onBlur={onBlur}\n              pattern=\"[0-9]\"\n            />\n            uah\n          </CurrentBalance>\n        </CurrentBalanceContainer>\n        <StyledBtn type=\"button\" onClick={onClick}>Confirm</StyledBtn>\n      </BaseContainer>\n    </BalanceForm>\n    \n    {popup.isShow && <Popup popup={popup} setPopup={setPopup} />}\n    </>\n  );\n}\n","import { useState } from 'react';\nimport svg from '../../images/icons_sprite.svg';\nimport {\n  BalanceContainer,\n  PeriodContainer,\n  MainPageSvg,\n  Period,\n  PeriodArrow,\n  PeriodData,\n  PeriodBtn,\n  StyledLink,\n  MainPageText,\n  MounthBox,\n  MounthContainer,\n} from './Balance.Report.styled';\nimport { BalanceReportFrom } from './BalanceReportForm';\nimport { currentPeriod } from 'redux/statistics/statsSlice';\nimport { getStatistics } from 'redux/statistics/statsOperations';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport function BalanceReport() {\n  const [month, setMonthes] = useState(1);\n  const statePeriod = useSelector(state => state.statistics.period);\n  const dispatch = useDispatch();\n\n  const getDate = idx => {\n    const objDate = new Date();\n\n    objDate.setDate(1);\n    objDate.setMonth(idx - 1);\n\n    const year = objDate.getFullYear();\n\n    const locale = 'en-us',\n      month = objDate.toLocaleString(locale, { month: 'long' });\n\n    return `${month} ${year}`;\n  };\n\n  const nextMonth = () => {\n    setMonthes(prevState => prevState + 1);\n\n    const newPeriod = new Date(JSON.parse(statePeriod));\n    newPeriod.setDate(1);\n    newPeriod.setMonth(new Date(JSON.parse(statePeriod)).getMonth() + 1);\n    const month = newPeriod.getMonth() + 1;\n    const period = `${newPeriod.getFullYear()}-${\n      month > 10 ? month : `0${month}`\n    }`;\n\n    dispatch(currentPeriod(JSON.stringify(newPeriod)));\n    dispatch(getStatistics({ period }));\n  };\n\n  const prevMonth = () => {\n    setMonthes(prevState => prevState - 1);\n\n    const newPeriod = new Date(JSON.parse(statePeriod));\n    newPeriod.setDate(1);\n    newPeriod.setMonth(new Date(JSON.parse(statePeriod)).getMonth() - 1);\n    const month = newPeriod.getMonth() + 1;\n    const period = `${newPeriod.getFullYear()}-${\n      month > 10 ? month : `0${month}`\n    }`;\n\n    dispatch(currentPeriod(JSON.stringify(newPeriod)));\n    dispatch(getStatistics({ period }));\n  };\n\n  return (\n    <BalanceContainer>\n      <PeriodContainer>\n        <StyledLink to=\"/wallet\">\n          <MainPageSvg>\n            <use href={`${svg}#arrow_back`}></use>\n          </MainPageSvg>\n          <MainPageText>Main Page</MainPageText>\n        </StyledLink>\n\n        <BalanceReportFrom />\n\n        <MounthBox>\n          <Period>Current period</Period>\n          <MounthContainer>\n            <PeriodBtn type=\"button\" onClick={prevMonth}>\n              <PeriodArrow>\n                <use href={`${svg}#arrow_left`} />\n              </PeriodArrow>\n            </PeriodBtn>\n            <PeriodData>{getDate(month)}</PeriodData>\n            <PeriodBtn type=\"button\" onClick={nextMonth}>\n              <PeriodArrow>\n                <use href={`${svg}#arrow_right`} />\n              </PeriodArrow>\n            </PeriodBtn>\n          </MounthContainer>\n        </MounthBox>\n      </PeriodContainer>\n    </BalanceContainer>\n  );\n}\n","import styled from '@emotion/styled'; \nimport { theme } from 'components/Theme'; \n \nconst TotalStatsStyle = { \n    BoxStats: styled.div` \n    display: block; \n    text-align: center; \n    width: 705px; \n    padding: 15px; \n    border-radius: 30px; \n    margin: 0 auto 30px auto; \n    background-color: ${theme.colors.PrimaryWhite}; \n    @media screen and (max-width: 768px) { \n      width: 100%; \n      padding: 5px 5px; \n    } \n \n    @media screen and (min-width: 1280px) { \n      width: 1035px; \n    } \n  `, \n  List: styled.ul` \n    display: flex; \n    padding: 0; \n    margin: 0; \n    justify-content: center; \n    align-items: center; \n    list-style: none; \n    font-weight: 700; \n    font-size: 14px; \n    line-height: 16px; \n    color: ${theme.colors.TextGray}; \n     @media screen and (max-width: 768px) { \n      column-gap: 10px; \n      width: 100%; \n    } \n  `, \n    AmountExpenses: styled.li` \n    width: 50%; \n    text-align: center; \n    & > span{    color: red; \n          margin-left: 15px; \n    display: inline-block; \n} \n    `, \n  AmountIncome: styled.li` \n    width: 50%; \n    text-align: center; \n    & > span {    color: green; \n          margin-left: 15px; \n    display: inline-block; \n} \n    @media screen and (max-width: 768px) { \nborder-left: 1px solid ${theme.colors.TextGray}; \n    } \n \n    `, \n}; \n \nexport default TotalStatsStyle;","import { formating } from \"components/Balance/BalanceForm\" \nimport TotalStatsStyle from \"./TotalStatisticsStyle\" \n \nconst { List, AmountExpenses, AmountIncome, BoxStats } = TotalStatsStyle \n \nconst TotalStatistics = ({ expenses, income }) => {\n    return (<BoxStats>\n        <List>\n            <AmountExpenses>Expenses:\n                <span>{`- ${formating(expenses)} UAH.`}</span>\n            </AmountExpenses>\n            <AmountIncome>Income:\n                <span>{`+ ${formating(income)} UAH.`}</span>\n            </AmountIncome>\n        </List>\n    </BoxStats>)\n};\n\n \nexport default TotalStatistics","import styled from 'styled-components';\nimport wallet_bg from '../../images/wallet_bg.png';\n\nexport const Main = styled.main`\n  margin-left: auto;\n  margin-right: auto;\n  @media screen and (max-width: 320px) {\n    width: 320px;\n  }\n  @media screen and (min-width: 768px) {\n    margin-bottom: 89px;\n    width: 704px;\n  }\n  @media screen and (min-width: 1280px) {\n    width: 1100px;\n  }\n`;\n\nexport const Bg = styled.div`\n  background-image: url(${wallet_bg});\n  background-repeat: no-repeat;\n  background-size: cover;\n`;\n","import Income from 'components/Income/Income';\nimport Expenses from 'components/Expenses/Expenses';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getStatistics } from 'redux/statistics/statsOperations';\nimport { BalanceReport } from 'components/BalanceReport/BalanceReport';\nimport TotalStatistics from 'components/TotalStatistics/TotalStatistics';\nimport styledComponents from 'components/Expenses/styleExpenses';\nimport { currentPeriod } from 'redux/statistics/statsSlice';\nimport { Bg } from 'components/Container/container';\n\nconst { BoxForBalance } = styledComponents;\n\nconst Statistics = () => {\n  const [toggleStats, setToggleStats] = useState(false);\n\n  const statePeriod = useSelector(state => state.statistics.period);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    \n    if (!statePeriod) {\n    const objDate = new Date();\n    const year = objDate.getFullYear();\n    const month = objDate.getMonth() + 1\n      \n    const period = `${year}-${month > 10 ? month : `0${month}`}`\n    dispatch(currentPeriod(JSON.stringify(objDate)))\n    dispatch(getStatistics({ period }))\n    }\n\n    return () => {\n      dispatch(currentPeriod(''))\n    }\n\n  }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    []);\n\n  const statistics = useSelector(state => state.statistics.statistics);\n\n  if (!statistics) {\n    return;\n  }\n\n  const onClick = () => {\n    setToggleStats(prev => !prev);\n  };\n\n  return (\n    <Bg>\n      <BoxForBalance>\n        <BalanceReport />\n      </BoxForBalance>\n      <TotalStatistics\n        expenses={statistics.data.expenses.expenseTotal}\n        income={statistics.data.incomes.incomeTotal}\n      />\n      {toggleStats ? (\n        <Income onClick={onClick} />\n      ) : (\n        <Expenses onClick={onClick} />\n      )}\n    </Bg>\n  );\n};\n\nexport default Statistics;\n","export const selectBalance = state => state.transactions.balance;\n\nexport const selectTransactions = state => state.transactions.transactions;\nexport const selectTransactionsOptions = state =>\n  state.transactions.transactionsOptions;\nexport const selectisLoadingOptions = state =>\n  state.transactions.transactionsOptions.isLoading;\nexport const selectTransactionsOptionsLength = state =>\n  selectTransactionsOptions(state).length;\n"],"names":["BalanceContainer","styled","PortalContainer","AbsoluteContainer","BalanceForm","Text","CurrentBalance","p","theme","colors","BgGray","Input","CurrentBalanceContainer","StyledBtn","PrimaryOrange","StyledLink","NavLink","ReportsSvg","BaseContainer","NotificationContainer","Triangle","StyledWindow","NotificationText","NotificationSubText","Notification","money","useState","show","setShow","opacity","setOpacity","useEffect","setTimeout","onClick","style","formating","data","fixedData","toFixed","dividedData","split","Number","toLocaleString","join","BalanceFrom","balance","useSelector","selectBalance","token","state","auth","accessToken","isShow","title","action","popup","setPopup","dispatch","useDispatch","value","setValue","htmlFor","type","id","name","defaultValue","onBlur","evt","target","number","Notiflix","notifySettings","pattern","createPortal","document","querySelector","fetchUserBalance","classList","add","Popup","BoxForBalance","BoxStats","BoxForSchedule","ListOfBalanceChanges","ItemOfBalanceChanges","TitleOfBalanceChanges","SvgBoxStyle","BoxForSvg","BtnToggleStats","customLabelHorizontal","x","y","width","textAnchor","dy","customLabelVertical","Chart","matches","useMediaQuery","ResponsiveContainer","height","BarChart","layout","margin","top","right","bottom","left","barCategoryGap","XAxis","dataKey","CartesianGrid","vertical","Bar","fill","label","barSize","radius","map","_","index","Cell","axisLine","hide","YAxis","styledComponents","statistics","filter","setFilter","incomes","incomesData","salary","income","incomeTotal","onItemClick","event","currentTarget","filtredData","Object","entries","el","res","cost","length","href","svg","total","expenses","expensesData","products","Продукты","alcohol","Алкоголь","entertainment","Развлечения","health","Здоровье","transport","Транспорт","housing","technique","Техника","communal","hobbies","education","Образование","other","Прочее","expenseTotal","PeriodContainer","MainPageSvg","Period","PeriodBtn","PeriodArrow","MounthContainer","PeriodData","MainPageText","MounthBox","BalanceReportFrom","BalanceReport","month","setMonthes","statePeriod","period","to","prevState","newPeriod","Date","JSON","parse","setDate","setMonth","getMonth","getFullYear","currentPeriod","stringify","getStatistics","idx","objDate","year","getDate","TotalStatsStyle","List","AmountExpenses","AmountIncome","Bg","wallet_bg","toggleStats","setToggleStats","prev","transactions","selectTransactions","selectTransactionsOptions","transactionsOptions","selectisLoadingOptions","isLoading","selectTransactionsOptionsLength"],"sourceRoot":""}