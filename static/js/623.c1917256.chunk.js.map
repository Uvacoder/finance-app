{"version":3,"file":"static/js/623.c1917256.chunk.js","mappings":"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","sources":["components/Balance/Balance.styled.js","components/StartNotification/Notification.styled.js","components/StartNotification/Notification.jsx","components/Balance/BalanceForm.jsx","components/Expenses/styleExpenses.js","components/Chart/Chart.jsx","components/Income/Income.jsx","components/Expenses/Expenses.jsx","components/StatsBalanceReport/Balance.Report.styled.js","components/StatsBalanceReport/BalanceReport.jsx","components/TotalStatistics/TotalStatisticsStyle.js","components/TotalStatistics/TotalStatistics.jsx","pages/Stats.styled.js","pages/Stats.jsx","pages/Wallet.styled.js","redux/transactions/transactionsSelectors.js","utils/formattingSum.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const BalanceContainer = styled.div`\n  height: auto;\n  flex-direction: column-reverse;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 40px;\n  margin-bottom: 40px;\n  background-color: transparent;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    height: 44px;\n    /* margin: 0 auto; */\n    gap: 0;\n    margin-bottom: 60px;\n    position: relative;\n\n    align-items: center;\n  }\n\n  @media screen and (min-width: 1280px) {\n    justify-content: flex-end;\n    margin-bottom: 8px;\n  }\n`;\n\nexport const PortalContainer = styled.div`\n  height: 0;\n  width: 125px;\n  padding-left: 68px;\n  padding-right: 141px;\n`;\n\nexport const AbsoluteContainer = styled(BalanceContainer)`\n  box-sizing: border-box;\n  top: 144px;\n  height: 0;\n  width: 100%;\n  position: absolute;\n  margin: 0 auto;\n  padding: 0 91px;\n\n  @media screen and (max-width: 768px) {\n    padding: 0 32px;\n  }\n\n  @media screen and (max-width: 480px) {\n    top: 232px;\n    left: -22px;\n    padding: 0 20px;\n  }\n`;\n\nexport const BalanceForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n  width: 100%;\n\n  @media screen and (min-width: 768px) {\n    width: unset;\n    flex-direction: row;\n    justify-content: flex-start;\n    gap: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    align-self: center;\n    justify-content: ${p => (p.page === 'wallet' ? 'center' : 'flex-start')};\n    flex-grow: 2;\n  }\n`;\n\nexport const BalanceFormNotification = styled(BalanceForm)``;\n\nexport const Text = styled.label`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.67;\n  letter-spacing: 0.02em;\n  color: ${p => p.theme.colors.TextGray};\n  /* color: rgba(82, 85, 95, 0.7); */\n\n  @media screen and (min-width: 768px) {\n    margin-right: 20px;\n  }\n`;\n\nexport const CurrentBalance = styled.p`\n  margin: 0;\n  position: relative;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.67px;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  text-align: center;\n  color: ${p => p.theme.colors.PrimaryBlack};\n`;\n\nexport const Input = styled.input`\n  width: fit-content;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.67px;\n  letter-spacing: 0.02em;\n  text-align: end;\n  color: ${p => (p.minusBalance ? 'red' : p.theme.colors.PrimaryBlack)};\n  background-color: transparent;\n  border: none;\n  outline: none;\n`;\n\nexport const CurrentBalanceContainer = styled.div`\n  position: relative;\n  box-sizing: border-box;\n  /* width: 50%; */\n  max-width: 280px;\n  width: ${p => (p.btnDisplay ? '140px' : '40vw')};\n  height: 44px;\n  display: flex;\n  justify-content: ${p =>\n    p.btnDisplay || p.page === 'stats' ? 'flex-end' : 'center'};\n  align-items: center;\n  /* padding: 15px 29px; */\n  padding: 12px 16px;\n  border: 2px solid ${p => p.theme.colors.balanceBorder};\n  border-radius: ${p => (p.btnDisplay ? '22px 0px 0px 22px' : '16px')};\n  background-color: ${p => p.theme.colors.BgGray};\n\n  @media screen and (min-width: 768px) {\n    width: 125px;\n    /* justify-content: center; */\n    margin-top: 0;\n    border-radius: 16px;\n  }\n`;\n\nexport const StyledBtn = styled.button`\n  display: ${p => (p.btnDisplay ? 'inline-flex' : 'none')};\n  align-items: center;\n  justify-content: flex-start;\n  box-sizing: border-box;\n  /* width: ${p => (p.btnDisplay ? 'unset' : '140px')}; */\n  height: 44px;\n  width: 140px;\n  border-radius: 0px 22px 22px 0px;\n  padding: 12px;\n  margin: 0;\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.17;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  /* color: rgba(82, 85, 95, 0.7); */\n  border: 2px solid ${props => props.theme.colors.btnsBorder};\n  background-color: ${p => p.theme.colors.BgGray};\n  color: ${p => p.theme.colors.PrimaryBlack};\n\n  cursor: pointer;\n\n  &:disabled {\n    opacity: 0.7;\n  }\n\n  transition: background-color 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    border 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:not(:disabled):hover,\n  &:not(:disabled):focus {\n    color: white;\n    background-color: ${p => p.theme.colors.PrimaryOrange};\n    border: none;\n  }\n\n  @media screen and (min-width: 768px) {\n    width: 125px;\n    margin-top: 0;\n    border-radius: 16px;\n    justify-content: center;\n  }\n\n  @media screen and (min-width: 1280px) {\n    display: inline-flex;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  line-height: 1.67;\n  letter-spacing: 0.04em;\n  text-decoration: none;\n  /* color: rgba(82, 85, 95, 0.7); */\n  color: ${p => p.theme.colors.TextGray};\n  transition: color 350ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  & svg {\n    fill: ${p => p.theme.colors.TextGray};\n    transition: fill 350ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.PrimaryOrange};\n  }\n\n  &:hover svg,\n  &:focus svg {\n    stroke: ${p => p.theme.colors.PrimaryOrange};\n    fill: ${p => p.theme.colors.PrimaryOrange};\n  }\n\n  @media screen and (min-width: 1280px) {\n    /* flex-grow: 1; */\n    justify-content: flex-end;\n  }\n`;\n\nexport const ReportsSvg = styled.svg`\n  height: 14px;\n  width: 14px;\n  margin-left: 20px;\n`;\n\nexport const BaseContainer = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    gap: 16px;\n    justify-content: center;\n    width: unset;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const NotificationContainer = styled.div`\n  position: absolute;\n  z-index: 1000;\n\n  @media screen and (min-width: 480px) {\n    transform: translateY(80px);\n  }\n\n  @media screen and (min-width: 768px) {\n    transform: translateY(0px);\n  }\n`;\n\nexport const Triangle = styled.div`\n  position: absolute;\n  top: -11px;\n  left: 46.36px;\n  height: 12px;\n  width: 26px;\n  background: linear-gradient(117.84deg, #1d346a 2.84%, #031634 67.28%);\n  clip-path: polygon(100% 100%, 0 100%, 50% 0);\n`;\n\nexport const StyledWindow = styled.div`\n  display: block;\n  width: 280px;\n  box-sizing: border-box;\n  position: relative;\n  background: linear-gradient(117.84deg, #1d346a 2.84%, #031634 67.28%);\n  padding: 29px 29.59px;\n  border-radius: 30px;\n  margin-top: 13px;\n  opacity: 0;\n  transition: opacity 600ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  @media screen and (min-width: 768px) {\n    height: 152px;\n    width: 288px;\n    /* display: none; */\n  }\n`;\n\nexport const NotificationText = styled.p`\n  font-size: 14px;\n  line-height: 1.43;\n  text-align: left;\n  color: white;\n  margin: 0;\n  margin-bottom: 20px;\n`;\n\nexport const NotificationSubText = styled.p`\n  font-size: 12px;\n  line-height: 1.33;\n  color: white;\n  margin: 0;\n`;\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport {\n  NotificationContainer,\n  StyledWindow,\n  Triangle,\n  NotificationText,\n  NotificationSubText,\n} from './Notification.styled';\n\nexport function Notification({ money = false }) {\n  const [show, setShow] = useState(false);\n  const [opacity, setOpacity] = useState(0);\n\n  useEffect(() => {\n    if (!money) {\n      setTimeout(() => {\n        setShow(true);\n        setTimeout(() => setOpacity(1), 0);\n        setTimeout(() => setOpacity(0), 9400);\n        setTimeout(() => setShow(false), 10000);\n      }, 1000);\n    }\n  }, [money]);\n\n  return (\n    <>\n      {show && (\n        <NotificationContainer onClick={() => setShow(false)}>\n          <StyledWindow style={{ opacity }}>\n            <Triangle />\n            <NotificationText>\n              Hello! To get started, enter the current balance of your account!\n            </NotificationText>\n            <NotificationSubText>\n              You can't spend money until you have it :)\n            </NotificationSubText>\n          </StyledWindow>\n        </NotificationContainer>\n      )}\n    </>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\n\nimport { selectBalance } from 'redux/transactions/transactionsSelectors';\nimport {\n  Text,\n  CurrentBalance,\n  StyledBtn,\n  CurrentBalanceContainer,\n  BalanceForm,\n  Input,\n  BaseContainer,\n  PortalContainer,\n  AbsoluteContainer,\n} from './Balance.styled';\nimport { Notification } from 'components/StartNotification/Notification';\nimport { Popup } from 'components/Popup/Popup';\nimport { fetchUserBalance } from 'redux/transactions/transactionsOps';\nimport { notifySettings } from '../../utils/notifySettings';\n\nexport function BalanceFrom({ btnDisplay = false, page = 'wallet' }) {\n  const dispatch = useDispatch();\n\n  const savedBalance = Number(useSelector(selectBalance)).toFixed(2);\n\n  const [popup, setPopup] = useState({\n    isShow: false,\n    title: '',\n    action: null,\n  });\n\n  const [balance, setBalance] = useState(savedBalance ?? 0);\n  const [minusBalance, setMinusBalance] = useState(false);\n\n  useEffect(() => {\n    setBalance(savedBalance);\n    setMinusBalance(false);\n    if (savedBalance < 0) {\n      setMinusBalance(true);\n      Notiflix.Notify.info(\n        `&#9757; Oops, you have negative balance`,\n        notifySettings\n      );\n    }\n  }, [savedBalance]);\n\n  const handleChange = ({ target: { value } }) => {\n    if (+value === 0) {\n      Notiflix.Notify.warning(`Balance cannot be \"0\"!`, notifySettings);\n    }\n    setBalance(Number(value).toFixed(2));\n  };\n\n  const onClick = () => {\n    if (+balance === 0) {\n      setBalance(prev => savedBalance);\n      return;\n    }\n    if (+balance === +savedBalance) {\n      Notiflix.Notify.warning(\n        `New balance cannot be the same!`,\n        notifySettings\n      );\n      return;\n    }\n\n    setPopup({\n      isShow: true,\n      title: 'Are you sure?',\n      action: () => dispatch(fetchUserBalance({ balance })),\n    });\n    document.querySelector('#modal').classList.add('js-action');\n  };\n\n  return (\n    <>\n      <BalanceForm page={page}>\n        <Text htmlFor=\"balance\">Balance:</Text>\n        <BaseContainer>\n          <CurrentBalanceContainer page={page} btnDisplay={btnDisplay}>\n            <Input\n              type=\"number\"\n              id=\"balance\"\n              name=\"balance\"\n              min=\"00.00\"\n              max=\"10000000.00\"\n              step=\"0.1\"\n              required\n              placeholder=\"00.00\"\n              onChange={handleChange}\n              value={balance || savedBalance || ''}\n              minusBalance={minusBalance}\n            />\n            <CurrentBalance>uah</CurrentBalance>\n            {createPortal(\n              <AbsoluteContainer>\n                <BalanceForm>\n                  <PortalContainer>\n                    <Notification money={balance} />\n                  </PortalContainer>\n                </BalanceForm>\n              </AbsoluteContainer>,\n              document.querySelector('#balance')\n            )}\n          </CurrentBalanceContainer>\n          <StyledBtn\n            type=\"button\"\n            disabled={!balance || balance === '0'}\n            onClick={onClick}\n            btnDisplay={btnDisplay}\n          >\n            Confirm\n          </StyledBtn>\n        </BaseContainer>\n      </BalanceForm>\n      {popup.isShow && <Popup popup={popup} setPopup={setPopup} />}\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { theme } from 'utils/theme';\n\nconst styledComponents = {\n  BoxForBalance: styled.div`\n    display: block;\n    width: 705px;\n    padding: 0;\n    margin: 0 auto 30px auto;\n\n    @media screen and (max-width: 768px) {\n      width: 100%;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: 1035px;\n    }\n  `,\n  BoxStats: styled.div`\n    width: 100%;\n    padding: 5px 5px;\n    margin: 0;\n    background-color: transparent;\n    display: block;\n    /* text-align: center; */\n    margin: 0 auto 32px auto;\n\n    @media screen and (min-width: 768px) {\n      width: 705px;\n      padding: 20px;\n      border-radius: 30px;\n      background-color: ${p => p.theme.colors.transactionList};\n      box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n    }\n\n    @media screen and (min-width: 1280px) {\n      margin: 0 auto 40px auto;\n      width: 1035px;\n    }\n  `,\n\n  BoxForSchedule: styled.div`\n    width: 100%;\n    height: 350px;\n    padding: 5px 5px;\n    display: block;\n    /* text-align: center; */\n    border-radius: 30px;\n    margin: 0 auto;\n\n    background-color: ${p => p.theme.colors.transactionList};\n    box-shadow: 0px 10px 60px rgba(170, 178, 197, 0.2);\n\n    @media screen and (min-width: 320px) {\n      width: 320px;\n      padding: 20px;\n    }\n\n    @media screen and (min-width: 768px) {\n      width: 705px;\n      height: 350px;\n      padding: 20px;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: 1035px;\n    }\n  `,\n\n  ListOfBalanceChanges: styled.ul`\n    display: flex;\n    padding: 0;\n    width: 625px;\n    margin: 0 auto;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: baseline;\n    row-gap: 40px;\n    column-gap: 30px;\n    list-style: none;\n    color: ${p => p.theme.colors.TextGray};\n\n    @media screen and (max-width: 768px) {\n      column-gap: 0;\n      row-gap: 0;\n      width: 100%;\n    }\n  `,\n\n  ItemOfBalanceChanges: styled.li`\n    max-width: 100px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n    font-size: 12px;\n    line-height: 14px;\n    letter-spacing: 0.02em;\n    text-transform: uppercase;\n    color: ${p => p.theme.colors.TextGray};\n\n    @media screen and (max-width: 768px) {\n      max-width: 110px;\n      padding: 20px 10px;\n\n      border-bottom: 1px solid ${p => p.theme.colors.TextGray};\n    }\n  `,\n\n  TitleOfBalanceChanges: styled.h3`\n    display: inline-block;\n    font-size: 14px;\n    line-height: 16px;\n    letter-spacing: 0.02em;\n    text-transform: uppercase;\n    margin: 0 30px 20px 30px;\n    color: ${p => p.theme.colors.PrimaryBlack};\n  `,\n\n  SvgBoxStyle: styled.svg`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 56px;\n    height: 56px;\n    margin: -5px;\n    fill: ${p => p.theme.colors.iconsFill};\n    transition: 350ms ease-in-out;\n\n    &:hover,\n    &:focus,\n    &:active {\n      fill: ${p => p.theme.colors.PrimaryOrange};\n      transform: scale(1.2);\n    }\n  `,\n\n  BoxForSvg: styled.div`\n    background-color: ${p => p.theme.colors.BgGray};\n    border-radius: 30px;\n    width: 46px;\n    height: 46px;\n    margin: 5px -5px 10px 0;\n\n    &:hover {\n      background-color: ${theme.colors.PaleOrange};\n      transform: scale(1.2);\n    }\n  `,\n\n  BtnToggleStats: styled.button`\n    padding: 5px;\n    border: none;\n    background-color: transparent;\n  `,\n\n  Sum: styled.p`\n    display: inline-flex;\n    width: 100%;\n    justify-content: center;\n    text-align: center;\n    margin-bottom: 8px;\n  `,\n};\n\nexport default styledComponents;\n","import { useMediaQuery } from '@react-hook/media-query';\nimport { useSelector } from 'react-redux';\n\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Cell,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n} from 'recharts';\nimport { getMode } from 'redux/theme/themeSelector';\n\nexport const Chart = ({ data }) => {\n  const mode = useSelector(getMode);\n\n  const modeColor = mode.mode === 'light' ? '#52555F' : '#FFFFFF';\n\n  const customLabelHorizontal = ({ x, y, width, value }) => {\n    return (\n      <text\n        x={x + width / 2}\n        y={y}\n        textAnchor=\"middle\"\n        dy={-6}\n        style={{\n          fill: modeColor,\n        }}\n      >\n        {`${value} UAH`}\n      </text>\n    );\n  };\n\n  const customLabelVertical = ({ x, y, value }) => {\n    return (\n      <text x={x} y={y} textAnchor=\"start\" style={{ fill: modeColor }}>\n        {`${value} UAH`}\n      </text>\n    );\n  };\n\n  const matches = useMediaQuery('only screen and (min-width: 420px)');\n\n  return (\n    <>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        {matches ? (\n          <BarChart\n            layout=\"horizontal\"\n            data={data}\n            margin={{ top: 30, right: 15, bottom: 15, left: 15 }}\n            barCategoryGap={1}\n          >\n            <XAxis dataKey=\"name\" type=\"category\" />\n            <CartesianGrid vertical={false} />\n            <Bar\n              dataKey=\"cost\"\n              fill=\"#FF751D\"\n              label={customLabelHorizontal}\n              barSize={50}\n              radius={[15, 15, 0, 0]}\n            >\n              {data.map((_, index) => {\n                switch (index % 3) {\n                  case 0:\n                    return <Cell key={`cell-${index}`} fill=\"#FF751D\" />;\n                  case 1:\n                  case 2:\n                    return <Cell key={`cell-${index}`} fill=\"#FED9BF\" />;\n                  default:\n                    return <Cell key={`cell-${index}`} fill=\"#FF751D\" />;\n                }\n              })}\n            </Bar>\n          </BarChart>\n        ) : (\n          <BarChart\n            layout=\"vertical\"\n            data={data}\n            margin={{ top: 15, right: 30, bottom: 15, left: 15 }}\n            barCategoryGap={1}\n          >\n            <XAxis axisLine={false} type=\"number\" hide />\n            <YAxis dataKey=\"name\" type=\"category\" />\n            <CartesianGrid vertical={false} />\n            <Bar\n              dataKey=\"cost\"\n              fill=\"#FF751D\"\n              label={customLabelVertical}\n              barSize={20}\n              radius={[0, 15, 15, 0]}\n            >\n              {data.map((_, index) => {\n                switch (index % 3) {\n                  case 0:\n                    return <Cell key={`cell-${index}`} fill=\"#FF751D\" />;\n                  case 1:\n                  case 2:\n                    return <Cell key={`cell-${index}`} fill=\"#FED9BF\" />;\n                  default:\n                    return <Cell key={`cell-${index}`} fill=\"#FF751D\" />;\n                }\n              })}\n            </Bar>\n          </BarChart>\n        )}\n      </ResponsiveContainer>\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport svg from '../../images/icons_sprite.svg';\nimport styledComponents from 'components/Expenses/styleExpenses';\nimport { Chart } from 'components/Chart/Chart';\nimport { useState } from 'react';\nimport { formattingSum } from 'utils/formattingSum';\n\nconst {\n  ListOfBalanceChanges,\n  ItemOfBalanceChanges,\n  TitleOfBalanceChanges,\n  SvgBoxStyle,\n  BtnToggleStats,\n  BoxForSvg,\n  BoxStats,\n  BoxForSchedule,\n  Sum,\n} = styledComponents;\n\nconst Income = ({ onClick }) => {\n  const statistics = useSelector(state => state.statistics.statistics);\n  const [filter, setFilter] = useState();\n\n  if (!statistics) {\n    return <TitleOfBalanceChanges>\"No data to display!\"</TitleOfBalanceChanges>;\n  }\n\n  const {\n    incomes: {\n      incomesData: {\n        // eslint-disable-next-line no-useless-computed-key\n        ['З/П']: salary,\n        // eslint-disable-next-line no-useless-computed-key\n        ['Доп. доход']: income,\n      },\n      incomeTotal,\n    },\n  } = statistics.data;\n\n  const onItemClick = event => {\n    setFilter(event.currentTarget.id);\n  };\n  const filtredData = () => {\n    const data = statistics.data.incomes.incomesData;\n\n    if (!data) return;\n    if (!filter) return;\n\n    const [, incomes] = Object.entries(data).filter(\n      el => el[0] === filter\n    )[0] || [null, false];\n\n    const res = Object.entries(incomes)\n      .filter(el => {\n        return el[0] !== 'total';\n      })\n      .map(el => {\n        return { name: el[0], cost: el[1] };\n      });\n\n    if (res.length === 0) {\n      return null;\n    }\n    return res;\n  };\n\n  return (\n    <>\n      <BoxStats>\n        <div>\n          <BtnToggleStats type=\"button\" onClick={onClick}>\n            <svg width=\"10\" height=\"10\">\n              <use href={`${svg}#arrow_left`} />\n            </svg>\n          </BtnToggleStats>\n          <TitleOfBalanceChanges>Income</TitleOfBalanceChanges>\n          <BtnToggleStats type=\"button\" onClick={onClick}>\n            <svg width=\"10\" height=\"10\">\n              <use href={`${svg}#arrow_right`} />\n            </svg>\n          </BtnToggleStats>\n        </div>\n        {incomeTotal ? (\n          <ListOfBalanceChanges>\n            {salary && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"З/П\">\n                <Sum>{formattingSum(salary.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#salary`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Salary</p>\n              </ItemOfBalanceChanges>\n            )}\n            {income && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Доп. доход\">\n                <Sum>{formattingSum(income.total)}</Sum>\n                <BoxForSvg>\n                  <SvgBoxStyle>\n                    <use href={`${svg}#income`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Add. income</p>\n              </ItemOfBalanceChanges>\n            )}\n          </ListOfBalanceChanges>\n        ) : (\n          <TitleOfBalanceChanges>\"No data to display!\"</TitleOfBalanceChanges>\n        )}\n      </BoxStats>\n      {filtredData() && (\n        <BoxForSchedule>\n          <Chart data={filtredData()} />\n        </BoxForSchedule>\n      )}\n    </>\n  );\n};\n\nexport default Income;\n","import { useSelector } from 'react-redux';\nimport svg from '../../images/icons_sprite.svg';\nimport styledComponents from './styleExpenses';\n\nimport { Chart } from 'components/Chart/Chart';\nimport { useState } from 'react';\nimport { formattingSum } from 'utils/formattingSum';\n\nconst {\n  ListOfBalanceChanges,\n  ItemOfBalanceChanges,\n  TitleOfBalanceChanges,\n  SvgBoxStyle,\n  BtnToggleStats,\n  BoxForSvg,\n  BoxStats,\n  BoxForSchedule,\n  Sum,\n} = styledComponents;\n\nconst Expenses = ({ onClick }) => {\n  const [filter, setFilter] = useState('');\n  const statistics = useSelector(state => state.statistics.statistics);\n\n  if (!statistics) {\n    return (\n      <BoxStats>\n        <TitleOfBalanceChanges>\"No data to display!\"</TitleOfBalanceChanges>\n      </BoxStats>\n    );\n  }\n\n  const onItemClick = event => {\n    setFilter(event.currentTarget.id);\n  };\n  const filtredData = () => {\n    if (!filter) return;\n\n    const data = statistics.data.expenses.expensesData;\n\n    const [, expenses] = Object.entries(data).filter(el => {\n      return el[0] === filter;\n    })[0] || [null, false];\n\n    const res = Object.entries(expenses)\n      .filter(el => {\n        return el[0] !== 'total';\n      })\n      .map(el => {\n        return { name: el[0], cost: el[1] };\n      });\n\n    if (res.length === 0) {\n      return null;\n    }\n    return res;\n  };\n\n  const {\n    expenses: {\n      expensesData: {\n        Продукты: products,\n        Алкоголь: alcohol,\n        Развлечения: entertainment,\n        Здоровье: health,\n        Транспорт: transport,\n        // eslint-disable-next-line no-useless-computed-key\n        ['Всё для дома']: housing,\n        Техника: technique,\n        // eslint-disable-next-line no-useless-computed-key\n        ['Коммуналка и связь']: communal,\n        // eslint-disable-next-line no-useless-computed-key\n        ['Спорт и хобби']: hobbies,\n        Образование: education,\n        Прочее: other,\n      },\n      expenseTotal,\n    },\n  } = statistics.data;\n\n  return (\n    <>\n      <BoxStats>\n        <div>\n          <BtnToggleStats type=\"button\">\n            <svg width=\"10\" height=\"10\" onClick={onClick}>\n              <use href={`${svg}#arrow_left`} />\n            </svg>\n          </BtnToggleStats>\n          <TitleOfBalanceChanges>Expenses</TitleOfBalanceChanges>\n          <BtnToggleStats type=\"button\" onClick={onClick}>\n            <svg width=\"10\" height=\"10\">\n              <use href={`${svg}#arrow_right`} />\n            </svg>\n          </BtnToggleStats>\n        </div>\n\n        {expenseTotal ? (\n          <ListOfBalanceChanges>\n            {products && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Продукты\">\n                <Sum>{formattingSum(products.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#products`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n\n                <p>Products</p>\n              </ItemOfBalanceChanges>\n            )}\n            {alcohol && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Алкоголь\">\n                <Sum>{formattingSum(alcohol.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#alcohol`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Alcohol</p>\n              </ItemOfBalanceChanges>\n            )}\n            {entertainment && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Развлечения\">\n                <Sum>{formattingSum(entertainment.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#entertainment`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Entertainment</p>\n              </ItemOfBalanceChanges>\n            )}\n            {health && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Здоровье\">\n                <Sum>{formattingSum(health.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#health`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Health</p>\n              </ItemOfBalanceChanges>\n            )}\n            {transport && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Транспорт\">\n                <Sum>{formattingSum(transport.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#transport`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Transport</p>\n              </ItemOfBalanceChanges>\n            )}\n            {housing && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Всё для дома\">\n                <Sum>{formattingSum(housing.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#housing`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Housing</p>\n              </ItemOfBalanceChanges>\n            )}\n            {technique && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Техника\">\n                <Sum>{formattingSum(technique.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#technique`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Technique</p>\n              </ItemOfBalanceChanges>\n            )}\n            {communal && (\n              <ItemOfBalanceChanges\n                onClick={onItemClick}\n                id=\"Коммуналка и связь\"\n              >\n                <Sum>{formattingSum(communal.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#communal`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Communal, communication</p>\n              </ItemOfBalanceChanges>\n            )}\n            {hobbies && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Спорт и хобби\">\n                <Sum>{formattingSum(hobbies.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#hobbies`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Sports, hobbies</p>\n              </ItemOfBalanceChanges>\n            )}\n            {education && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Образование\">\n                <Sum>{formattingSum(education.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#education`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Education</p>\n              </ItemOfBalanceChanges>\n            )}\n            {other && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Прочее\">\n                <Sum>{formattingSum(other.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#other`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Other</p>\n              </ItemOfBalanceChanges>\n            )}\n          </ListOfBalanceChanges>\n        ) : (\n          <TitleOfBalanceChanges>\"No data to display!\"</TitleOfBalanceChanges>\n        )}\n      </BoxStats>\n      {filtredData() && (\n        <BoxForSchedule>\n          <Chart data={filtredData()} />\n        </BoxForSchedule>\n      )}\n    </>\n  );\n};\n\nexport default Expenses;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\nimport { BalanceFrom } from 'components/Balance/BalanceForm';\n\nexport const BalanceContainer = styled.div`\n  box-sizing: border-box;\n  height: auto;\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  background-color: transparent;\n  flex-direction: column-reverse;\n\n  @media screen and (min-width: 768px) {\n    justify-content: space-between;\n    height: 44px;\n    flex-direction: row;\n  }\n`;\n\nexport const StyledBtn = styled.button`\n  box-sizing: border-box;\n\n  height: 44px;\n  width: 125px;\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.67;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n\n  color: rgba(82, 85, 95, 0.7);\n  background-color: ${p => p.theme.colors.BgGray};\n\n  transition: background-color 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    border 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  border: 2px solid #ffffff;\n  border-radius: 16px;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: ${p => p.theme.colors.PrimaryOrange};\n\n    border: none;\n  }\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  align-self: flex-start;\n  margin-bottom: 22px;\n  font-size: 12px;\n  line-height: 1.67;\n  letter-spacing: 0.04em;\n  text-decoration: none;\n  color: rgba(82, 85, 95, 0.7);\n  transition: color 400ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.PrimaryOrange};\n  }\n\n  @media screen and (min-width: 768px) {\n    align-self: unset;\n    margin-bottom: 0;\n    flex-grow: 2;\n  }\n`;\n\nexport const DataWrapper = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  justify-content: center;\n  align-items: center;\n  gap: 32px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    gap: unset;\n    flex-grow: 2;\n    justify-content: space-between;\n  }\n`;\n\nexport const FormWrapper = styled(BalanceFrom)`\n  justify-content: flex-start;\n`;\n\nexport const PeriodContainer = styled.div`\n  flex-direction: column;\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n  }\n`;\n\nexport const MainPageSvg = styled.svg`\n  height: 18px;\n  width: 18px;\n\n  margin-right: 19px;\n\n  @media screen and (max-width: 480px) {\n    margin-right: 0;\n    margin-left: 3px;\n  }\n`;\n\nexport const Period = styled.p`\n  font-size: 12px;\n  line-height: 1.67;\n  text-align: center;\n  letter-spacing: 0.04em;\n  color: ${p => p.theme.colors.TextGray};\n  margin: 0;\n`;\n\nexport const PeriodBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: transparent;\n\n  border: none;\n\n  cursor: pointer;\n`;\n\nexport const PeriodArrow = styled.svg`\n  height: 14px;\n  width: 12px;\n`;\n\nexport const BaseContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const MounthContainer = styled(BaseContainer)`\n  width: fit-content;\n`;\n\nexport const PeriodData = styled.p`\n  display: inline-flex;\n  justify-content: center;\n  text-align: center;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.14px;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: ${p => p.theme.colors.PrimaryBlack};\n  user-select: none;\n`;\n\nexport const MainPageText = styled.p`\n  margin: 0;\n  display: none;\n  color: ${p => p.theme.colors.TextGray};\n\n  @media screen and (min-width: 768px) {\n    display: inline-flex;\n  }\n`;\nexport const MounthBox = styled.div`\n  min-width: 150px;\n`;\n","import { useState } from 'react';\nimport svg from '../../images/icons_sprite.svg';\nimport {\n  BalanceContainer,\n  PeriodContainer,\n  MainPageSvg,\n  Period,\n  PeriodArrow,\n  PeriodData,\n  PeriodBtn,\n  StyledLink,\n  MainPageText,\n  MounthBox,\n  MounthContainer,\n  DataWrapper,\n} from './Balance.Report.styled';\nimport { currentPeriod } from 'redux/statistics/statsSlice';\nimport { getStatistics } from 'redux/statistics/statsOperations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BalanceFrom } from 'components/Balance/BalanceForm';\n\nexport function BalanceReport() {\n  const [month, setMonthes] = useState(1);\n  const statePeriod = useSelector(state => state.statistics.period);\n  const dispatch = useDispatch();\n\n  const getDate = idx => {\n    const objDate = new Date();\n\n    objDate.setDate(1);\n    objDate.setMonth(idx - 1);\n\n    const year = objDate.getFullYear();\n\n    const locale = 'en-us',\n      month = objDate.toLocaleString(locale, { month: 'long' });\n\n    return `${month} ${year}`;\n  };\n\n  const nextMonth = () => {\n    setMonthes(prevState => prevState + 1);\n\n    const newPeriod = new Date(JSON.parse(statePeriod));\n    newPeriod.setDate(1);\n    newPeriod.setMonth(new Date(JSON.parse(statePeriod)).getMonth() + 1);\n    const month = newPeriod.getMonth() + 1;\n    const period = `${newPeriod.getFullYear()}-${\n      month > 10 ? month : `0${month}`\n    }`;\n\n    dispatch(currentPeriod(JSON.stringify(newPeriod)));\n    dispatch(getStatistics({ period }));\n  };\n\n  const prevMonth = () => {\n    setMonthes(prevState => prevState - 1);\n\n    const newPeriod = new Date(JSON.parse(statePeriod));\n    newPeriod.setDate(1);\n    newPeriod.setMonth(new Date(JSON.parse(statePeriod)).getMonth() - 1);\n    const month = newPeriod.getMonth() + 1;\n    const period = `${newPeriod.getFullYear()}-${\n      month > 10 ? month : `0${month}`\n    }`;\n\n    dispatch(currentPeriod(JSON.stringify(newPeriod)));\n    dispatch(getStatistics({ period }));\n  };\n\n  return (\n    <BalanceContainer>\n      <PeriodContainer>\n        <StyledLink to=\"/wallet\">\n          <MainPageSvg>\n            <use href={`${svg}#arrow_back`}></use>\n          </MainPageSvg>\n          <MainPageText>Main Page</MainPageText>\n        </StyledLink>\n        <DataWrapper>\n          <BalanceFrom page=\"stats\" btnDisplay={false} />\n          <MounthBox>\n            <Period>Current period</Period>\n            <MounthContainer>\n              <PeriodBtn type=\"button\" onClick={prevMonth}>\n                <PeriodArrow>\n                  <use href={`${svg}#arrow_left`} />\n                </PeriodArrow>\n              </PeriodBtn>\n              <PeriodData>{getDate(month)}</PeriodData>\n              <PeriodBtn type=\"button\" onClick={nextMonth}>\n                <PeriodArrow>\n                  <use href={`${svg}#arrow_right`} />\n                </PeriodArrow>\n              </PeriodBtn>\n            </MounthContainer>\n          </MounthBox>\n        </DataWrapper>\n      </PeriodContainer>\n    </BalanceContainer>\n  );\n}\n","import styled from 'styled-components';\nimport { theme } from 'utils/theme';\n\nconst TotalStatsStyle = {\n  BoxStats: styled.div`\n    box-sizing: border-box;\n    height: 85px;\n    padding: 20px 10px;\n    display: block;\n    text-align: center;\n    margin: 0 auto 30px auto;\n    background-color: ${p => p.theme.colors.PrimaryWhite};\n    /* box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4); */\n    border-radius: 20px;\n\n    @media screen and (min-width: 768px) {\n      height: 50px;\n      width: 705px;\n      padding: 15px;\n      border-radius: 30px;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: 1035px;\n    }\n  `,\n  List: styled.ul`\n    height: 100%;\n    display: flex;\n    padding: 0;\n    margin: 0;\n    justify-content: space-between;\n    align-items: center;\n    list-style: none;\n    font-weight: 700;\n    font-size: 14px;\n    line-height: 16px;\n    color: ${p => p.theme.colors.TextGray};\n\n    @media screen and (max-width: 768px) {\n      justify-content: center;\n      column-gap: 10px;\n      width: 100%;\n    }\n  `,\n\n  AmountExpenses: styled.li`\n    width: 50%;\n    height: 100%;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n\n    & > span {\n      color: red;\n      display: inline-block;\n    }\n\n    @media screen and (min-width: 768px) {\n      flex-direction: row;\n      padding-right: 20px;\n      justify-content: flex-end;\n\n      & > span {\n        margin-left: 15px;\n      }\n    }\n  `,\n\n  AmountIncome: styled.li`\n    width: 50%;\n    height: 100%;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    border-left: 1px solid ${theme.colors.TextGray};\n\n    & > span {\n      color: green;\n      display: inline-block;\n    }\n\n    @media screen and (min-width: 768px) {\n      flex-direction: row;\n      padding-left: 20px;\n\n      & > span {\n        margin-left: 15px;\n      }\n    }\n  `,\n};\n\nexport default TotalStatsStyle;\n","import { formattingSum } from 'utils/formattingSum';\nimport TotalStatsStyle from './TotalStatisticsStyle';\n\nconst { List, AmountExpenses, AmountIncome, BoxStats } = TotalStatsStyle;\n\nconst TotalStatistics = ({ expenses, income }) => {\n  return (\n    <BoxStats>\n      <List>\n        <AmountExpenses>\n          Expenses:\n          <span>{`- ${formattingSum(expenses)} UAH.`}</span>\n        </AmountExpenses>\n        <AmountIncome>\n          Income:\n          <span>{`+ ${formattingSum(income)} UAH.`}</span>\n        </AmountIncome>\n      </List>\n    </BoxStats>\n  );\n};\n\nexport default TotalStatistics;\n","import styled from 'styled-components';\n\nimport { Container, AnimationWrapper } from './Wallet.styled';\n\nexport const ContainerStats = styled(Container)`\n  @media screen and (min-width: 768px) {\n    padding: 49px 32px 350px 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 40px 91px 270px 91px;\n  }\n`;\n\nexport const AnimationWrapperStats = styled(AnimationWrapper)`\n  @media screen and (min-width: 1280px) {\n    height: 50vh;\n    width: 100%;\n    z-index: -100000;\n  }\n`;\n","import Income from 'components/Income/Income';\nimport Expenses from 'components/Expenses/Expenses';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getStatistics } from 'redux/statistics/statsOperations';\nimport { BalanceReport } from 'components/StatsBalanceReport/BalanceReport';\nimport TotalStatistics from 'components/TotalStatistics/TotalStatistics';\nimport styledComponents from 'components/Expenses/styleExpenses';\nimport { currentPeriod } from 'redux/statistics/statsSlice';\nimport { AnimatedCabbages } from './Wallet.styled';\nimport {\n  ImageWrapper,\n  Particles,\n} from 'components/AnimatedBg/AnimatedBg.styled';\nimport { ContainerStats, AnimationWrapperStats } from './Stats.styled';\n\nconst { BoxForBalance } = styledComponents;\n\nconst Statistics = () => {\n  const [toggleStats, setToggleStats] = useState(false);\n\n  const statePeriod = useSelector(state => state.statistics.period);\n\n  const dispatch = useDispatch();\n\n  useEffect(\n    () => {\n      if (!statePeriod) {\n        const objDate = new Date();\n        const year = objDate.getFullYear();\n        const month = objDate.getMonth() + 1;\n\n        const period = `${year}-${month > 10 ? month : `0${month}`}`;\n        dispatch(currentPeriod(JSON.stringify(objDate)));\n        dispatch(getStatistics({ period }));\n      }\n\n      return () => {\n        dispatch(currentPeriod(''));\n      };\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const statistics = useSelector(state => state.statistics.statistics);\n\n  if (!statistics) {\n    return;\n  }\n\n  const onClick = () => {\n    setToggleStats(prev => !prev);\n  };\n\n  return (\n    <ContainerStats>\n      <ImageWrapper />\n      <BoxForBalance>\n        <BalanceReport />\n      </BoxForBalance>\n\n      <TotalStatistics\n        expenses={statistics.data.expenses.expenseTotal}\n        income={statistics.data.incomes.incomeTotal}\n      />\n      {toggleStats ? (\n        <Income onClick={onClick} />\n      ) : (\n        <Expenses onClick={onClick} />\n      )}\n\n      <AnimatedCabbages />\n      <AnimationWrapperStats>\n        <Particles>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n        </Particles>\n      </AnimationWrapperStats>\n    </ContainerStats>\n  );\n};\n\nexport default Statistics;\n","import { ImageWrapperBottom } from 'components/AnimatedCabbagesBottom/AnimatedCabbagesBottom.styled';\nimport styled from 'styled-components';\n\nexport const AnimatedCabbages = styled(ImageWrapperBottom)`\n  bottom: 60px;\n  right: 5%;\n  left: unset;\n\n  @media screen and (min-width: 1280px) {\n    display: none;\n  }\n`;\n\nexport const Container = styled.main`\n  position: relative;\n  overflow: hidden;\n  padding: 40px 20px 160px 20px;\n  display: flex;\n  flex-direction: column;\n  /* justify-content: center;\n  align-items: center; */\n\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    padding: 49px 32px 270px 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 40px 91px 270px 91px;\n  }\n`;\n\nexport const AnimationWrapper = styled.div`\n  display: none;\n\n  @media screen and (min-width: 1280px) {\n    display: block;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    z-index: -100000;\n    height: 70%;\n    width: 100%;\n  }\n`;\n","export const selectBalance = state => state.transactions.balance;\n\nexport const selectTransactions = state => state.transactions.transactions;\nexport const selectTransactionsOptions = state =>\n  state.transactions.transactionsOptions;\nexport const selectisLoadingOptions = state =>\n  state.transactions.transactionsOptions.isLoading;\nexport const selectTransactionsOptionsLength = state =>\n  selectTransactionsOptions(state).length;\n","export const formattingSum = data => {\n  const fixedData = data.toFixed(2);\n  if (data < 10) return '0' + fixedData;\n\n  const dividedData = fixedData.split('.');\n\n  const spacedData = Number(dividedData[0])\n    .toLocaleString()\n    .split(',')\n    .join(' ');\n  return spacedData + '.' + dividedData[1];\n};\n"],"names":["BalanceContainer","styled","PortalContainer","AbsoluteContainer","BalanceForm","p","page","Text","theme","colors","TextGray","CurrentBalance","PrimaryBlack","Input","minusBalance","CurrentBalanceContainer","btnDisplay","balanceBorder","BgGray","StyledBtn","props","btnsBorder","PrimaryOrange","StyledLink","NavLink","ReportsSvg","BaseContainer","NotificationContainer","Triangle","StyledWindow","NotificationText","NotificationSubText","Notification","money","useState","show","setShow","opacity","setOpacity","useEffect","setTimeout","onClick","style","BalanceFrom","dispatch","useDispatch","savedBalance","Number","useSelector","selectBalance","toFixed","isShow","title","action","popup","setPopup","balance","setBalance","setMinusBalance","Notiflix","notifySettings","htmlFor","type","id","name","min","max","step","required","placeholder","onChange","value","target","createPortal","document","querySelector","disabled","fetchUserBalance","classList","add","prev","Popup","BoxForBalance","BoxStats","transactionList","BoxForSchedule","ListOfBalanceChanges","ItemOfBalanceChanges","TitleOfBalanceChanges","SvgBoxStyle","iconsFill","BoxForSvg","BtnToggleStats","Sum","Chart","data","modeColor","getMode","mode","matches","useMediaQuery","ResponsiveContainer","width","height","BarChart","layout","margin","top","right","bottom","left","barCategoryGap","XAxis","dataKey","CartesianGrid","vertical","Bar","fill","label","x","y","textAnchor","dy","barSize","radius","map","_","index","Cell","axisLine","hide","YAxis","styledComponents","statistics","state","filter","setFilter","incomes","incomesData","salary","income","incomeTotal","onItemClick","event","currentTarget","filtredData","Object","entries","el","res","cost","length","href","svg","formattingSum","total","expenses","expensesData","products","Продукты","alcohol","Алкоголь","entertainment","Развлечения","health","Здоровье","transport","Транспорт","housing","technique","Техника","communal","hobbies","education","Образование","other","Прочее","expenseTotal","DataWrapper","PeriodContainer","MainPageSvg","Period","PeriodBtn","PeriodArrow","MounthContainer","PeriodData","MainPageText","MounthBox","BalanceReport","month","setMonthes","statePeriod","period","to","prevState","newPeriod","Date","JSON","parse","setDate","setMonth","getMonth","getFullYear","currentPeriod","stringify","getStatistics","idx","objDate","year","toLocaleString","getDate","TotalStatsStyle","PrimaryWhite","List","AmountExpenses","AmountIncome","ContainerStats","Container","AnimationWrapperStats","AnimationWrapper","toggleStats","setToggleStats","AnimatedCabbages","ImageWrapperBottom","transactions","selectTransactions","selectTransactionsOptions","transactionsOptions","selectisLoadingOptions","isLoading","selectTransactionsOptionsLength","fixedData","dividedData","split","join"],"sourceRoot":""}