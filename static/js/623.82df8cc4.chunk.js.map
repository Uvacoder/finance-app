{"version":3,"file":"static/js/623.82df8cc4.chunk.js","mappings":"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","sources":["components/Balance/Balance.styled.js","components/Notification/Notification.styled.js","components/Notification/Notification.jsx","components/Balance/BalanceForm.jsx","components/Expenses/styleExpenses.js","components/Chart/Chart.jsx","components/Income/Income.jsx","components/Expenses/Expenses.jsx","components/StatsBalanceReport/Balance.Report.styled.js","components/StatsBalanceReport/BalanceReport.jsx","components/TotalStatistics/TotalStatisticsStyle.js","components/TotalStatistics/TotalStatistics.jsx","pages/Stats.styled.js","pages/Stats.jsx","pages/Wallet.styled.js","redux/transactions/transactionsSelectors.js","utils/formattingSum.js"],"sourcesContent":["import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n// import { NumericFormat } from 'react-number-format';\n\n// export const BalanceInput = styled(NumericFormat)`\n//   width: 74px;\n\n//   font-weight: 700;\n//   font-size: 12px;\n//   line-height: 1.67px;\n//   letter-spacing: 0.02em;\n//   text-align: right;\n\n//   color: black;\n\n//   background-color: transparent;\n\n//   border: none;\n\n//   outline: none;\n// `;\n\nexport const BalanceContainer = styled.div`\n  height: auto;\n  flex-direction: column-reverse;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: 40px;\n  margin-bottom: 40px;\n  background-color: transparent;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: space-between;\n    height: 44px;\n    /* margin: 0 auto; */\n    gap: 0;\n    margin-bottom: 60px;\n    position: relative;\n\n    align-items: center;\n  }\n\n  @media screen and (min-width: 1280px) {\n    justify-content: flex-end;\n    margin-bottom: 8px;\n  }\n`;\n\nexport const PortalContainer = styled.div`\n  height: 0;\n  width: 125px;\n  padding-left: 68px;\n  padding-right: 141px;\n`;\n\nexport const AbsoluteContainer = styled(BalanceContainer)`\n  box-sizing: border-box;\n  top: 144px;\n  height: 0;\n  width: 100%;\n\n  position: absolute;\n\n  margin: 0 auto;\n  padding: 0 91px;\n\n  @media screen and (max-width: 768px) {\n    padding: 0 32px;\n  }\n\n  @media screen and (max-width: 480px) {\n    top: 232px;\n    left: -22px;\n\n    padding: 0 20px;\n  }\n`;\n\nexport const BalanceForm = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 8px;\n\n  @media screen and (min-width: 768px) {\n    flex-direction: row;\n    justify-content: flex-start;\n    gap: 0;\n  }\n\n  @media screen and (min-width: 1280px) {\n    align-self: center;\n    justify-content: center;\n    flex-grow: 3;\n  }\n`;\n\nexport const BalanceFormNotification = styled(BalanceForm)``;\n\nexport const Text = styled.label`\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.67;\n  letter-spacing: 0.02em;\n\n  color: rgba(82, 85, 95, 0.7);\n\n  margin-right: 20px;\n`;\n\nexport const CurrentBalance = styled.p`\n  box-sizing: border-box;\n\n  position: relative;\n\n  height: 44px;\n  width: 125px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.67px;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  text-align: center;\n\n  color: black;\n  background-color: ${p => p.theme.colors.BgGray};\n\n  border: 2px solid #ffffff;\n  border-radius: 16px;\n  margin-right: 16px;\n\n  @media screen and (max-width: 480px) {\n    width: 140px;\n\n    padding-right: 16px;\n    border-radius: 22px 0px 0px 22px;\n    margin: 0;\n    margin-top: 8px;\n  }\n`;\n\nexport const Input = styled.input`\n  width: 74px;\n\n  font-weight: 700;\n  font-size: 12px;\n  line-height: 1.67px;\n  letter-spacing: 0.02em;\n  text-align: right;\n\n  color: black;\n\n  background-color: transparent;\n\n  border: none;\n\n  outline: none;\n`;\n\nexport const CurrentBalanceContainer = styled.div`\n  position: relative;\n`;\n\nexport const StyledBtn = styled.button`\n  box-sizing: border-box;\n\n  height: 44px;\n  width: 125px;\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.67;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n\n  color: rgba(82, 85, 95, 0.7);\n  background-color: ${p => p.theme.colors.BgGray};\n\n  transition: background-color 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    border 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  border: 2px solid #ffffff;\n  border-radius: 16px;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: ${p => p.theme.colors.PrimaryOrange};\n\n    border: none;\n  }\n\n  @media screen and (max-width: 480px) {\n    width: 140px;\n\n    border-radius: 0px 22px 22px 0px;\n    margin: 0;\n    margin-top: 8px;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n  font-size: 12px;\n  line-height: 1.67;\n  letter-spacing: 0.04em;\n  text-decoration: none;\n  color: rgba(82, 85, 95, 0.7);\n  transition: color 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.PrimaryOrange};\n  }\n\n  @media screen and (min-width: 1280px) {\n    /* flex-grow: 1; */\n    justify-content: flex-end;\n  }\n`;\n\nexport const ReportsSvg = styled.svg`\n  height: 14px;\n  width: 14px;\n\n  margin-left: 20px;\n`;\n\nexport const BaseContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n","import styled from 'styled-components';\n\nexport const NotificationContainer = styled.div`\n  position: absolute;\n  z-index: 1000;\n`;\n\nexport const Triangle = styled.div`\n  position: absolute;\n  top: -11px;\n  left: 46.36px;\n\n  height: 12px;\n  width: 26px;\n\n  background: linear-gradient(117.84deg, #1d346a 2.84%, #031634 67.28%);\n\n  clip-path: polygon(100% 100%, 0 100%, 50% 0);\n`;\n\nexport const StyledWindow = styled.div`\n  box-sizing: border-box;\n\n  position: relative;\n\n  height: 152px;\n  width: 288px;\n\n  background: linear-gradient(117.84deg, #1d346a 2.84%, #031634 67.28%);\n\n  padding: 29px 29.59px;\n  border-radius: 30px;\n  margin-top: 13px;\n\n  opacity: 0;\n\n  transition: opacity 600ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n\n  @media screen and (max-width: 480px) {\n    display: block;\n\n    width: 280px;\n  }\n`;\n\nexport const NotificationText = styled.p`\n  font-size: 14px;\n  line-height: 1.43;\n  text-align: left;\n\n  color: white;\n\n  margin: 0;\n\n  margin-bottom: 20px;\n`;\n\nexport const NotificationSubText = styled.p`\n  font-size: 12px;\n  line-height: 1.33;\n\n  color: white;\n\n  margin: 0;\n`;\n","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport {\n  NotificationContainer,\n  StyledWindow,\n  Triangle,\n  NotificationText,\n  NotificationSubText,\n} from './Notification.styled';\n\nexport function Notification({ money = false }) {\n  const [show, setShow] = useState(false);\n  const [opacity, setOpacity] = useState(0);\n\n  useEffect(() => {\n    if (!money) {\n      setTimeout(() => {\n        setShow(true);\n        setTimeout(() => setOpacity(1), 0);\n        setTimeout(() => setOpacity(0), 9400);\n        setTimeout(() => setShow(false), 10000);\n      }, 1000);\n    }\n  }, [money]);\n\n  return (\n    <>\n      {show && (\n        <NotificationContainer onClick={() => setShow(false)}>\n          <StyledWindow style={{ opacity }}>\n            <Triangle />\n            <NotificationText>\n              Hello! To get started, enter the current balance of your account!\n            </NotificationText>\n            <NotificationSubText>\n              You can't spend money until you have it :)\n            </NotificationSubText>\n          </StyledWindow>\n        </NotificationContainer>\n      )}\n    </>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { createPortal } from 'react-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectBalance } from 'redux/transactions/transactionsSelectors';\nimport {\n  Text,\n  CurrentBalance,\n  StyledBtn,\n  CurrentBalanceContainer,\n  BalanceForm,\n  Input,\n  BaseContainer,\n  PortalContainer,\n  AbsoluteContainer,\n} from './Balance.styled';\nimport { Notification } from 'components/Notification/Notification';\nimport { Popup } from 'components/Popup/Popup';\nimport { fetchUserBalance } from 'redux/transactions/transactionsOps';\nimport { notifySettings } from '../../utils/notifySettings';\nimport Notiflix from 'notiflix';\nimport { formattingSum } from 'utils/formattingSum';\n\nexport function BalanceFrom() {\n  const dispatch = useDispatch();\n\n  const savedBalance = useSelector(selectBalance);\n\n  const [popup, setPopup] = useState({\n    isShow: false,\n    title: '',\n    action: null,\n  });\n\n  const [balance, setBalance] = useState(savedBalance ?? 0);\n\n  useEffect(() => {\n    setBalance(savedBalance);\n  }, [savedBalance]);\n\n  const handleChange = ({ target: { value } }) => {\n    // const num = value.toFixed(2);\n    setBalance(value);\n    console.log(formattingSum(+value));\n  };\n\n  const onClick = () => {\n    if (Number(balance) === 0) {\n      setBalance(prev => savedBalance);\n      Notiflix.Notify.warning(`Balance cannot be \"0\"!`, notifySettings);\n      return;\n    }\n\n    setPopup({\n      isShow: true,\n      title: 'Are you sure?',\n      action: () => dispatch(fetchUserBalance({ balance })),\n    });\n    document.querySelector('#modal').classList.add('js-action');\n  };\n\n  return (\n    <>\n      <BalanceForm>\n        <Text htmlFor=\"balance\">Balance:</Text>\n        <BaseContainer>\n          <CurrentBalanceContainer>\n            <CurrentBalance>\n              <Input\n                type=\"number\"\n                id=\"balance\"\n                name=\"balance\"\n                min=\"00.00\"\n                max=\"10000000.00\"\n                step=\"0.1\"\n                required\n                placeholder=\"00.00\"\n                // defaultValue={formating(value)}\n                // onBlur={onBlur}\n                onChange={handleChange}\n                value={balance || savedBalance || ''}\n              />\n              uah\n            </CurrentBalance>\n            {createPortal(\n              <AbsoluteContainer>\n                <BalanceForm>\n                  <PortalContainer>\n                    <Notification money={balance} />\n                  </PortalContainer>\n                </BalanceForm>\n              </AbsoluteContainer>,\n              document.querySelector('#balance')\n            )}\n          </CurrentBalanceContainer>\n          <StyledBtn\n            type=\"button\"\n            disabled={!balance || balance === '0'}\n            onClick={onClick}\n          >\n            Confirm\n          </StyledBtn>\n        </BaseContainer>\n      </BalanceForm>\n      {popup.isShow && <Popup popup={popup} setPopup={setPopup} />}\n    </>\n  );\n}\n","import styled from 'styled-components';\nimport { theme } from 'components/Theme';\n\nconst styledComponents = {\n  BoxForBalance: styled.div`\n    display: block;\n    width: 705px;\n    padding: 0;\n    margin: 0 auto 30px auto;\n    @media screen and (max-width: 768px) {\n      width: 100%;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: 1035px;\n    }\n  `,\n  BoxStats: styled.div`\n    display: block;\n    text-align: center;\n    width: 705px;\n    padding: 20px;\n    border-radius: 30px;\n    margin: 0 auto 40px auto;\n    background-color: ${theme.colors.PrimaryWhite};\n    @media screen and (max-width: 768px) {\n      width: 100%;\n      padding: 5px 5px;\n      margin: 0;\n      background-color: transparent;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: 1035px;\n    }\n  `,\n\n  BoxForSchedule: styled.div`\n    height: 350px;\n    display: block;\n    text-align: center;\n    width: 705px;\n    padding: 20px;\n    border-radius: 30px;\n    margin: 0 auto;\n    background-color: ${theme.colors.PrimaryWhite};\n    @media screen and (max-width: 768px) {\n      width: 100%;\n      padding: 5px 5px;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: 1035px;\n    }\n  `,\n\n  ListOfBalanceChanges: styled.ul`\n    display: flex;\n    padding: 0;\n    width: 625px;\n    margin: 0 auto;\n    flex-wrap: wrap;\n    justify-content: center;\n    align-items: baseline;\n    row-gap: 40px;\n    column-gap: 30px;\n    list-style: none;\n    color: ${theme.colors.TextGray};\n    @media screen and (max-width: 768px) {\n      column-gap: 0;\n      row-gap: 0;\n      width: 100%;\n    }\n  `,\n  ItemOfBalanceChanges: styled.li`\n    max-width: 100px;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    gap: 10px;\n\n    font-size: 12px;\n    line-height: 14px;\n    letter-spacing: 0.02em;\n    text-transform: uppercase;\n    @media screen and (max-width: 768px) {\n      max-width: 110px;\n      padding: 20px 10px;\n      border-bottom: 1px solid ${theme.colors.TextGray};\n    }\n  `,\n  TitleOfBalanceChanges: styled.h3`\n    display: inline-block;\n    font-size: 14px;\n    line-height: 16px;\n    letter-spacing: 0.02em;\n    text-transform: uppercase;\n    margin: 0 30px 20px 30px;\n    color: ${theme.colors.PrimaryBlack};\n  `,\n  SvgBoxStyle: styled.svg`\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 56px;\n    height: 56px;\n    margin: -5px;\n    fill: ${theme.colors.SVGColor};\n    transition: 350ms ease-in-out;\n    &:hover,\n    &:focus,\n    &:active {\n      fill: ${theme.colors.PrimaryOrange};\n      transform: scale(1.2);\n    }\n  `,\n\n  BoxForSvg: styled.div`\n    background-color: ${theme.colors.PrimaryGray};\n    border-radius: 30px;\n    width: 46px;\n    height: 46px;\n    margin: -5px -5px 0 0;\n    &:hover {\n      background-color: ${theme.colors.PaleOrange};\n      transform: scale(1.2);\n    }\n  `,\n\n  BtnToggleStats: styled.button`\n    padding: 5px;\n    border: none;\n    background-color: transparent;\n  `,\n\n  Sum: styled.p`\n    display: inline-flex;\n    width: 100%;\n    justify-content: center;\n    text-align: center;\n    margin-bottom: 8px;\n  `,\n};\n\nexport default styledComponents;\n","import { useMediaQuery } from '@react-hook/media-query';\n\nimport {\n  Bar,\n  BarChart,\n  CartesianGrid,\n  Cell,\n  ResponsiveContainer,\n  XAxis,\n  YAxis,\n} from 'recharts';\n\nconst customLabelHorizontal = ({ x, y, width, value }) => {\n  return (\n    <text x={x + width / 2} y={y} textAnchor=\"middle\" dy={-6}>\n      {`${value} UAH`}\n    </text>\n  );\n};\n\nconst customLabelVertical = ({ x, y, value }) => {\n  return (\n    <text x={x} y={y} textAnchor=\"start\">\n      {`${value} UAH`}\n    </text>\n  );\n};\nexport const Chart = ({ data }) => {\n  const matches = useMediaQuery('only screen and (min-width: 420px)');\n\n  return (\n    <>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        {matches ? (\n          <BarChart\n            layout=\"horizontal\"\n            data={data}\n            margin={{ top: 30, right: 15, bottom: 15, left: 15 }}\n            barCategoryGap={1}\n          >\n            <XAxis dataKey=\"name\" type=\"category\" />\n            <CartesianGrid vertical={false} />\n            <Bar\n              dataKey=\"cost\"\n              fill=\"#FF751D\"\n              label={customLabelHorizontal}\n              barSize={50}\n              radius={[15, 15, 0, 0]}\n            >\n              {data.map((_, index) => {\n                switch (index % 3) {\n                  case 0:\n                    return <Cell key={`cell-${index}`} fill=\"#FF751D\" />;\n                  case 1:\n                  case 2:\n                    return <Cell key={`cell-${index}`} fill=\"#FED9BF\" />;\n                  default:\n                    return <Cell key={`cell-${index}`} fill=\"#FF751D\" />;\n                }\n              })}\n            </Bar>\n          </BarChart>\n        ) : (\n          <BarChart\n            layout=\"vertical\"\n            data={data}\n            margin={{ top: 15, right: 30, bottom: 15, left: 15 }}\n            barCategoryGap={1}\n          >\n            <XAxis axisLine={false} type=\"number\" hide />\n            <YAxis dataKey=\"name\" type=\"category\" />\n            <CartesianGrid vertical={false} />\n            <Bar\n              dataKey=\"cost\"\n              fill=\"#FF751D\"\n              label={customLabelVertical}\n              barSize={20}\n              radius={[0, 15, 15, 0]}\n            >\n              {data.map((_, index) => {\n                switch (index % 3) {\n                  case 0:\n                    return <Cell key={`cell-${index}`} fill=\"#FF751D\" />;\n                  case 1:\n                  case 2:\n                    return <Cell key={`cell-${index}`} fill=\"#FED9BF\" />;\n                  default:\n                    return <Cell key={`cell-${index}`} fill=\"#FF751D\" />;\n                }\n              })}\n            </Bar>\n          </BarChart>\n        )}\n      </ResponsiveContainer>\n    </>\n  );\n};\n","import { useSelector } from 'react-redux';\nimport svg from '../../images/icons_sprite.svg';\nimport styledComponents from 'components/Expenses/styleExpenses';\nimport { Chart } from 'components/Chart/Chart';\nimport { useState } from 'react';\nimport { formattingSum } from 'utils/formattingSum';\n\nconst {\n  ListOfBalanceChanges,\n  ItemOfBalanceChanges,\n  TitleOfBalanceChanges,\n  SvgBoxStyle,\n  BtnToggleStats,\n  BoxForSvg,\n  BoxStats,\n  BoxForSchedule,\n  Sum,\n} = styledComponents;\n\nconst Income = ({ onClick }) => {\n  const statistics = useSelector(state => state.statistics.statistics);\n  const [filter, setFilter] = useState();\n\n  if (!statistics) {\n    return <TitleOfBalanceChanges>\"No data to display!\"</TitleOfBalanceChanges>;\n  }\n\n  const {\n    incomes: {\n      incomesData: {\n        // eslint-disable-next-line no-useless-computed-key\n        ['З/П']: salary,\n        // eslint-disable-next-line no-useless-computed-key\n        ['Доп. доход']: income,\n      },\n      incomeTotal,\n    },\n  } = statistics.data;\n\n  const onItemClick = event => {\n    setFilter(event.currentTarget.id);\n  };\n  const filtredData = () => {\n    const data = statistics.data.incomes.incomesData;\n\n    if (!data) return;\n    if (!filter) return;\n\n    const [, incomes] = Object.entries(data).filter(\n      el => el[0] === filter\n    )[0] || [null, false];\n\n    const res = Object.entries(incomes)\n      .filter(el => {\n        return el[0] !== 'total';\n      })\n      .map(el => {\n        return { name: el[0], cost: el[1] };\n      });\n\n    if (res.length === 0) {\n      return null;\n    }\n    return res;\n  };\n\n  return (\n    <>\n      <BoxStats>\n        <div>\n          <BtnToggleStats type=\"button\" onClick={onClick}>\n            <svg width=\"10\" height=\"10\">\n              <use href={`${svg}#arrow_left`} />\n            </svg>\n          </BtnToggleStats>\n          <TitleOfBalanceChanges>Income</TitleOfBalanceChanges>\n          <BtnToggleStats type=\"button\" onClick={onClick}>\n            <svg width=\"10\" height=\"10\">\n              <use href={`${svg}#arrow_right`} />\n            </svg>\n          </BtnToggleStats>\n        </div>\n        {incomeTotal ? (\n          <ListOfBalanceChanges>\n            {salary && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"З/П\">\n                <Sum>{formattingSum(salary.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#salary`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Salary</p>\n              </ItemOfBalanceChanges>\n            )}\n            {income && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Доп. доход\">\n                <Sum>{formattingSum(income.total)}</Sum>\n                <BoxForSvg>\n                  <SvgBoxStyle>\n                    <use href={`${svg}#income`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Add. income</p>\n              </ItemOfBalanceChanges>\n            )}\n          </ListOfBalanceChanges>\n        ) : (\n          <TitleOfBalanceChanges>\"No data to display!\"</TitleOfBalanceChanges>\n        )}\n      </BoxStats>\n      {filtredData() && (\n        <BoxForSchedule>\n          <Chart data={filtredData()} />\n        </BoxForSchedule>\n      )}\n    </>\n  );\n};\n\nexport default Income;\n","import { useSelector } from 'react-redux';\nimport svg from '../../images/icons_sprite.svg';\nimport styledComponents from './styleExpenses';\n\nimport { Chart } from 'components/Chart/Chart';\nimport { useState } from 'react';\nimport { formattingSum } from 'utils/formattingSum';\n\nconst {\n  ListOfBalanceChanges,\n  ItemOfBalanceChanges,\n  TitleOfBalanceChanges,\n  SvgBoxStyle,\n  BtnToggleStats,\n  BoxForSvg,\n  BoxStats,\n  BoxForSchedule,\n  Sum,\n} = styledComponents;\n\nconst Expenses = ({ onClick }) => {\n  const [filter, setFilter] = useState('');\n  const statistics = useSelector(state => state.statistics.statistics);\n\n  if (!statistics) {\n    return (\n      <BoxStats>\n        <TitleOfBalanceChanges>\"No data to display!\"</TitleOfBalanceChanges>\n      </BoxStats>\n    );\n  }\n\n  const onItemClick = event => {\n    setFilter(event.currentTarget.id);\n  };\n  const filtredData = () => {\n    if (!filter) return;\n\n    const data = statistics.data.expenses.expensesData;\n\n    const [, expenses] = Object.entries(data).filter(el => {\n      return el[0] === filter;\n    })[0] || [null, false];\n\n    const res = Object.entries(expenses)\n      .filter(el => {\n        return el[0] !== 'total';\n      })\n      .map(el => {\n        return { name: el[0], cost: el[1] };\n      });\n\n    if (res.length === 0) {\n      return null;\n    }\n    return res;\n  };\n\n  const {\n    expenses: {\n      expensesData: {\n        Продукты: products,\n        Алкоголь: alcohol,\n        Развлечения: entertainment,\n        Здоровье: health,\n        Транспорт: transport,\n        // eslint-disable-next-line no-useless-computed-key\n        ['Всё для дома']: housing,\n        Техника: technique,\n        // eslint-disable-next-line no-useless-computed-key\n        ['Коммуналка и связь']: communal,\n        // eslint-disable-next-line no-useless-computed-key\n        ['Спорт и хобби']: hobbies,\n        Образование: education,\n        Прочее: other,\n      },\n      expenseTotal,\n    },\n  } = statistics.data;\n\n  return (\n    <>\n      <BoxStats>\n        <div>\n          <BtnToggleStats type=\"button\">\n            <svg width=\"10\" height=\"10\" onClick={onClick}>\n              <use href={`${svg}#arrow_left`} />\n            </svg>\n          </BtnToggleStats>\n          <TitleOfBalanceChanges>Expenses</TitleOfBalanceChanges>\n          <BtnToggleStats type=\"button\" onClick={onClick}>\n            <svg width=\"10\" height=\"10\">\n              <use href={`${svg}#arrow_right`} />\n            </svg>\n          </BtnToggleStats>\n        </div>\n\n        {expenseTotal ? (\n          <ListOfBalanceChanges>\n            {products && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Продукты\">\n                <Sum>{formattingSum(products.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#products`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n\n                <p>Products</p>\n              </ItemOfBalanceChanges>\n            )}\n            {alcohol && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Алкоголь\">\n                <Sum>{formattingSum(alcohol.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#alcohol`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Alcohol</p>\n              </ItemOfBalanceChanges>\n            )}\n            {entertainment && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Развлечения\">\n                <Sum>{formattingSum(entertainment.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#entertainment`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Entertainment</p>\n              </ItemOfBalanceChanges>\n            )}\n            {health && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Здоровье\">\n                <Sum>{formattingSum(health.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#health`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Health</p>\n              </ItemOfBalanceChanges>\n            )}\n            {transport && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Транспорт\">\n                <Sum>{formattingSum(transport.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#transport`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Transport</p>\n              </ItemOfBalanceChanges>\n            )}\n            {housing && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Всё для дома\">\n                <Sum>{formattingSum(housing.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#housing`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Housing</p>\n              </ItemOfBalanceChanges>\n            )}\n            {technique && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Техника\">\n                <Sum>{formattingSum(technique.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#technique`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Technique</p>\n              </ItemOfBalanceChanges>\n            )}\n            {communal && (\n              <ItemOfBalanceChanges\n                onClick={onItemClick}\n                id=\"Коммуналка и связь\"\n              >\n                <Sum>{formattingSum(communal.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#communal`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Communal, communication</p>\n              </ItemOfBalanceChanges>\n            )}\n            {hobbies && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Спорт и хобби\">\n                <Sum>{formattingSum(hobbies.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#hobbies`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Sports, hobbies</p>\n              </ItemOfBalanceChanges>\n            )}\n            {education && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Образование\">\n                <Sum>{formattingSum(education.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#education`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Education</p>\n              </ItemOfBalanceChanges>\n            )}\n            {other && (\n              <ItemOfBalanceChanges onClick={onItemClick} id=\"Прочее\">\n                <Sum>{formattingSum(other.total)}</Sum>\n                <BoxForSvg>\n                  {' '}\n                  <SvgBoxStyle>\n                    <use href={`${svg}#other`} />\n                  </SvgBoxStyle>\n                </BoxForSvg>\n                <p>Other</p>\n              </ItemOfBalanceChanges>\n            )}\n          </ListOfBalanceChanges>\n        ) : (\n          <TitleOfBalanceChanges>\"No data to display!\"</TitleOfBalanceChanges>\n        )}\n      </BoxStats>\n      {filtredData() && (\n        <BoxForSchedule>\n          <Chart data={filtredData()} />\n        </BoxForSchedule>\n      )}\n    </>\n  );\n};\n\nexport default Expenses;\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const BalanceContainer = styled.div`\n  box-sizing: border-box;\n  height: auto;\n  width: 100%;\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  background-color: transparent;\n  flex-direction: column-reverse;\n\n  @media screen and (min-width: 768px) {\n    justify-content: space-between;\n    height: 44px;\n    flex-direction: row;\n  }\n`;\n\nexport const StyledBtn = styled.button`\n  box-sizing: border-box;\n\n  height: 44px;\n  width: 125px;\n\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.67;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n\n  color: rgba(82, 85, 95, 0.7);\n  background-color: ${p => p.theme.colors.BgGray};\n\n  transition: background-color 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 400ms cubic-bezier(0.4, 0, 0.2, 1),\n    border 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  border: 2px solid #ffffff;\n  border-radius: 16px;\n\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: ${p => p.theme.colors.PrimaryOrange};\n\n    border: none;\n  }\n\n  @media screen and (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const StyledLink = styled(NavLink)`\n  display: flex;\n  align-items: center;\n\n  font-size: 12px;\n  line-height: 1.67;\n  letter-spacing: 0.04em;\n\n  text-decoration: none;\n\n  color: rgba(82, 85, 95, 0.7);\n\n  transition: color 400ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  cursor: pointer;\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.PrimaryOrange};\n  }\n\n  @media screen and (max-width: 480px) {\n    align-self: flex-start;\n    margin-bottom: 22px;\n  }\n`;\n\nexport const PeriodContainer = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n\n  @media screen and (max-width: 480px) {\n    flex-direction: column;\n  }\n`;\n\nexport const MainPageSvg = styled.svg`\n  height: 18px;\n  width: 18px;\n\n  margin-right: 19px;\n\n  @media screen and (max-width: 480px) {\n    margin-right: 0;\n    margin-left: 3px;\n  }\n`;\n\nexport const Period = styled.p`\n  font-size: 12px;\n  line-height: 1.67;\n  text-align: center;\n  letter-spacing: 0.04em;\n\n  color: rgba(82, 85, 95, 0.7);\n\n  margin: 0;\n`;\n\nexport const PeriodBtn = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  background-color: transparent;\n\n  border: none;\n\n  cursor: pointer;\n`;\n\nexport const PeriodArrow = styled.svg`\n  height: 14px;\n  width: 12px;\n`;\n\nexport const BaseContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const MounthContainer = styled(BaseContainer)`\n  width: fit-content;\n`;\n\nexport const PeriodData = styled.p`\n  display: inline-flex;\n  justify-content: center;\n  text-align: center;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.14px;\n  letter-spacing: 0.02em;\n  text-transform: uppercase;\n  color: #000000;\n  user-select: none;\n`;\n\nexport const MainPageText = styled.p`\n  margin: 0;\n\n  @media screen and (max-width: 480px) {\n    display: none;\n  }\n`;\nexport const MounthBox = styled.div`\n  min-width: 150px;\n`;\n","import { useState } from 'react';\nimport svg from '../../images/icons_sprite.svg';\nimport {\n  BalanceContainer,\n  PeriodContainer,\n  MainPageSvg,\n  Period,\n  PeriodArrow,\n  PeriodData,\n  PeriodBtn,\n  StyledLink,\n  MainPageText,\n  MounthBox,\n  MounthContainer,\n} from './Balance.Report.styled';\nimport { currentPeriod } from 'redux/statistics/statsSlice';\nimport { getStatistics } from 'redux/statistics/statsOperations';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { BalanceFrom } from 'components/Balance/BalanceForm';\n\nexport function BalanceReport() {\n  const [month, setMonthes] = useState(1);\n  const statePeriod = useSelector(state => state.statistics.period);\n  const dispatch = useDispatch();\n\n  const getDate = idx => {\n    const objDate = new Date();\n\n    objDate.setDate(1);\n    objDate.setMonth(idx - 1);\n\n    const year = objDate.getFullYear();\n\n    const locale = 'en-us',\n      month = objDate.toLocaleString(locale, { month: 'long' });\n\n    return `${month} ${year}`;\n  };\n\n  const nextMonth = () => {\n    setMonthes(prevState => prevState + 1);\n\n    const newPeriod = new Date(JSON.parse(statePeriod));\n    newPeriod.setDate(1);\n    newPeriod.setMonth(new Date(JSON.parse(statePeriod)).getMonth() + 1);\n    const month = newPeriod.getMonth() + 1;\n    const period = `${newPeriod.getFullYear()}-${\n      month > 10 ? month : `0${month}`\n    }`;\n\n    dispatch(currentPeriod(JSON.stringify(newPeriod)));\n    dispatch(getStatistics({ period }));\n  };\n\n  const prevMonth = () => {\n    setMonthes(prevState => prevState - 1);\n\n    const newPeriod = new Date(JSON.parse(statePeriod));\n    newPeriod.setDate(1);\n    newPeriod.setMonth(new Date(JSON.parse(statePeriod)).getMonth() - 1);\n    const month = newPeriod.getMonth() + 1;\n    const period = `${newPeriod.getFullYear()}-${\n      month > 10 ? month : `0${month}`\n    }`;\n\n    dispatch(currentPeriod(JSON.stringify(newPeriod)));\n    dispatch(getStatistics({ period }));\n  };\n\n  return (\n    <BalanceContainer>\n      <PeriodContainer>\n        <StyledLink to=\"/wallet\">\n          <MainPageSvg>\n            <use href={`${svg}#arrow_back`}></use>\n          </MainPageSvg>\n          <MainPageText>Main Page</MainPageText>\n        </StyledLink>\n\n        <BalanceFrom />\n\n        <MounthBox>\n          <Period>Current period</Period>\n          <MounthContainer>\n            <PeriodBtn type=\"button\" onClick={prevMonth}>\n              <PeriodArrow>\n                <use href={`${svg}#arrow_left`} />\n              </PeriodArrow>\n            </PeriodBtn>\n            <PeriodData>{getDate(month)}</PeriodData>\n            <PeriodBtn type=\"button\" onClick={nextMonth}>\n              <PeriodArrow>\n                <use href={`${svg}#arrow_right`} />\n              </PeriodArrow>\n            </PeriodBtn>\n          </MounthContainer>\n        </MounthBox>\n      </PeriodContainer>\n    </BalanceContainer>\n  );\n}\n","import styled from 'styled-components';\nimport { theme } from 'components/Theme';\n\nconst TotalStatsStyle = {\n  BoxStats: styled.div`\n    box-sizing: border-box;\n    height: 85px;\n    padding: 20px 10px;\n    display: block;\n    text-align: center;\n    margin: 0 auto 30px auto;\n    background-color: ${theme.colors.PrimaryWhite};\n    box-shadow: 5px 10px 20px rgba(170, 178, 197, 0.4);\n    border-radius: 20px;\n\n    @media screen and (min-width: 768px) {\n      height: 50px;\n      width: 705px;\n      padding: 15px;\n      border-radius: 30px;\n    }\n\n    @media screen and (min-width: 1280px) {\n      width: 1035px;\n    }\n  `,\n  List: styled.ul`\n    height: 100%;\n    display: flex;\n    padding: 0;\n    margin: 0;\n    justify-content: space-between;\n    align-items: center;\n    list-style: none;\n    font-weight: 700;\n    font-size: 14px;\n    line-height: 16px;\n    color: ${theme.colors.TextGray};\n\n    @media screen and (max-width: 768px) {\n      justify-content: center;\n      column-gap: 10px;\n      width: 100%;\n    }\n  `,\n\n  AmountExpenses: styled.li`\n    width: 50%;\n    height: 100%;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n\n    & > span {\n      color: red;\n      display: inline-block;\n    }\n\n    @media screen and (min-width: 768px) {\n      flex-direction: row;\n      padding-right: 20px;\n      justify-content: flex-end;\n\n      & > span {\n        margin-left: 15px;\n      }\n    }\n  `,\n\n  AmountIncome: styled.li`\n    width: 50%;\n    height: 100%;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    align-items: center;\n    border-left: 1px solid ${theme.colors.TextGray};\n\n    & > span {\n      color: green;\n      display: inline-block;\n    }\n\n    @media screen and (min-width: 768px) {\n      flex-direction: row;\n      padding-left: 20px;\n\n      & > span {\n        margin-left: 15px;\n      }\n    }\n  `,\n};\n\nexport default TotalStatsStyle;\n","import { formattingSum } from 'utils/formattingSum';\nimport TotalStatsStyle from './TotalStatisticsStyle';\n\nconst { List, AmountExpenses, AmountIncome, BoxStats } = TotalStatsStyle;\n\nconst TotalStatistics = ({ expenses, income }) => {\n  return (\n    <BoxStats>\n      <List>\n        <AmountExpenses>\n          Expenses:\n          <span>{`- ${formattingSum(expenses)} UAH.`}</span>\n        </AmountExpenses>\n        <AmountIncome>\n          Income:\n          <span>{`+ ${formattingSum(income)} UAH.`}</span>\n        </AmountIncome>\n      </List>\n    </BoxStats>\n  );\n};\n\nexport default TotalStatistics;\n","import styled from 'styled-components';\n\nimport { Container, AnimationWrapper } from './Wallet.styled';\n\nexport const ContainerStats = styled(Container)`\n  @media screen and (min-width: 768px) {\n    padding: 49px 32px 350px 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 40px 91px 270px 91px;\n  }\n`;\n\nexport const AnimationWrapperStats = styled(AnimationWrapper)`\n  @media screen and (min-width: 1280px) {\n    height: 50vh;\n    width: 100%;\n    z-index: -100000;\n  }\n`;\n","import Income from 'components/Income/Income';\nimport Expenses from 'components/Expenses/Expenses';\nimport { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getStatistics } from 'redux/statistics/statsOperations';\nimport { BalanceReport } from 'components/StatsBalanceReport/BalanceReport';\nimport TotalStatistics from 'components/TotalStatistics/TotalStatistics';\nimport styledComponents from 'components/Expenses/styleExpenses';\nimport { currentPeriod } from 'redux/statistics/statsSlice';\nimport { AnimatedCabbages } from './Wallet.styled';\nimport {\n  ImageWrapper,\n  Particles,\n} from 'components/AnimatedBg/AnimatedBg.styled';\nimport { ContainerStats, AnimationWrapperStats } from './Stats.styled';\n\nconst { BoxForBalance } = styledComponents;\n\nconst Statistics = () => {\n  const [toggleStats, setToggleStats] = useState(false);\n\n  const statePeriod = useSelector(state => state.statistics.period);\n\n  const dispatch = useDispatch();\n\n  useEffect(\n    () => {\n      if (!statePeriod) {\n        const objDate = new Date();\n        const year = objDate.getFullYear();\n        const month = objDate.getMonth() + 1;\n\n        const period = `${year}-${month > 10 ? month : `0${month}`}`;\n        dispatch(currentPeriod(JSON.stringify(objDate)));\n        dispatch(getStatistics({ period }));\n      }\n\n      return () => {\n        dispatch(currentPeriod(''));\n      };\n    }, // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const statistics = useSelector(state => state.statistics.statistics);\n\n  if (!statistics) {\n    return;\n  }\n\n  const onClick = () => {\n    setToggleStats(prev => !prev);\n  };\n\n  return (\n    <ContainerStats>\n      <ImageWrapper />\n      <BoxForBalance>\n        <BalanceReport />\n      </BoxForBalance>\n      <TotalStatistics\n        expenses={statistics.data.expenses.expenseTotal}\n        income={statistics.data.incomes.incomeTotal}\n      />\n      {toggleStats ? (\n        <Income onClick={onClick} />\n      ) : (\n        <Expenses onClick={onClick} />\n      )}\n\n      <AnimatedCabbages />\n      <AnimationWrapperStats>\n        <Particles>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n          <li></li>\n        </Particles>\n      </AnimationWrapperStats>\n    </ContainerStats>\n  );\n};\n\nexport default Statistics;\n","import { ImageWrapperBottom } from 'components/AnimatedCabbagesBottom/AnimatedCabbagesBottom.styled';\nimport styled from 'styled-components';\n\nexport const AnimatedCabbages = styled(ImageWrapperBottom)`\n  bottom: 60px;\n  right: 5%;\n  left: unset;\n\n  @media screen and (min-width: 1280px) {\n    display: none;\n  }\n`;\n\nexport const Container = styled.main`\n  position: relative;\n  overflow: hidden;\n  padding: 40px 20px 160px 20px;\n  display: flex;\n  flex-direction: column;\n  /* justify-content: center;\n  align-items: center; */\n\n  text-align: center;\n\n  @media screen and (min-width: 768px) {\n    padding: 49px 32px 270px 32px;\n  }\n\n  @media screen and (min-width: 1280px) {\n    padding: 40px 91px 270px 91px;\n  }\n`;\n\nexport const AnimationWrapper = styled.div`\n  display: none;\n\n  @media screen and (min-width: 1280px) {\n    display: block;\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    z-index: -1000;\n    height: 100vh;\n    width: 100%;\n  }\n`;\n","export const selectBalance = state => state.transactions.balance;\n\nexport const selectTransactions = state => state.transactions.transactions;\nexport const selectTransactionsOptions = state =>\n  state.transactions.transactionsOptions;\nexport const selectisLoadingOptions = state =>\n  state.transactions.transactionsOptions.isLoading;\nexport const selectTransactionsOptionsLength = state =>\n  selectTransactionsOptions(state).length;\n","export const formattingSum = data => {\n  const fixedData = data.toFixed(2);\n  if (data < 10) return '0' + fixedData;\n\n  const dividedData = fixedData.split('.');\n\n  const spacedData = Number(dividedData[0])\n    .toLocaleString()\n    .split(',')\n    .join(' ');\n  return spacedData + '.' + dividedData[1];\n};\n"],"names":["BalanceContainer","styled","PortalContainer","AbsoluteContainer","BalanceForm","Text","CurrentBalance","p","theme","colors","BgGray","Input","CurrentBalanceContainer","StyledBtn","PrimaryOrange","StyledLink","NavLink","ReportsSvg","BaseContainer","NotificationContainer","Triangle","StyledWindow","NotificationText","NotificationSubText","Notification","money","useState","show","setShow","opacity","setOpacity","useEffect","setTimeout","onClick","style","BalanceFrom","dispatch","useDispatch","savedBalance","useSelector","selectBalance","isShow","title","action","popup","setPopup","balance","setBalance","htmlFor","type","id","name","min","max","step","required","placeholder","onChange","value","target","console","log","formattingSum","createPortal","document","querySelector","disabled","Number","prev","Notiflix","notifySettings","fetchUserBalance","classList","add","Popup","BoxForBalance","BoxStats","BoxForSchedule","ListOfBalanceChanges","ItemOfBalanceChanges","TitleOfBalanceChanges","SvgBoxStyle","BoxForSvg","BtnToggleStats","Sum","customLabelHorizontal","x","y","width","textAnchor","dy","customLabelVertical","Chart","data","matches","useMediaQuery","ResponsiveContainer","height","BarChart","layout","margin","top","right","bottom","left","barCategoryGap","XAxis","dataKey","CartesianGrid","vertical","Bar","fill","label","barSize","radius","map","_","index","Cell","axisLine","hide","YAxis","styledComponents","statistics","state","filter","setFilter","incomes","incomesData","salary","income","incomeTotal","onItemClick","event","currentTarget","filtredData","Object","entries","el","res","cost","length","href","svg","total","expenses","expensesData","products","Продукты","alcohol","Алкоголь","entertainment","Развлечения","health","Здоровье","transport","Транспорт","housing","technique","Техника","communal","hobbies","education","Образование","other","Прочее","expenseTotal","PeriodContainer","MainPageSvg","Period","PeriodBtn","PeriodArrow","MounthContainer","PeriodData","MainPageText","MounthBox","BalanceReport","month","setMonthes","statePeriod","period","to","prevState","newPeriod","Date","JSON","parse","setDate","setMonth","getMonth","getFullYear","currentPeriod","stringify","getStatistics","idx","objDate","year","toLocaleString","getDate","TotalStatsStyle","List","AmountExpenses","AmountIncome","ContainerStats","Container","AnimationWrapperStats","AnimationWrapper","toggleStats","setToggleStats","AnimatedCabbages","ImageWrapperBottom","transactions","selectTransactions","selectTransactionsOptions","transactionsOptions","selectisLoadingOptions","isLoading","selectTransactionsOptionsLength","fixedData","toFixed","dividedData","split","join"],"sourceRoot":""}